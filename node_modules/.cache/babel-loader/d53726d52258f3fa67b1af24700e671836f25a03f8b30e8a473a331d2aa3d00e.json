{"ast":null,"code":"import _objectSpread from\"C:/Users/DELL/OneDrive/Desktop/collabeaseproject/collabeasesorce/collabease/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useEffect,useRef}from'react';import axios from'axios';import{io}from'socket.io-client';import{jsx as _jsx}from\"react/jsx-runtime\";export const NotificationContext=/*#__PURE__*/createContext();export const NotificationProvider=_ref=>{let{children}=_ref;const[notifications,setNotifications]=useState([]);const[unreadCount,setUnreadCount]=useState(0);const[loading,setLoading]=useState(false);const[user,setUser]=useState(null);const socketRef=useRef(null);// Update user when auth changes\nuseEffect(()=>{const token=localStorage.getItem('token');if(token){// Fetch current user\nconst fetchUser=async()=>{try{const res=await axios.get('/auth/current-user',{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});if(res.data&&res.data.user){setUser(res.data.user);}}catch(err){console.error('Error fetching user in NotificationContext:',err);}};fetchUser();}else{setUser(null);}},[]);// Set up Socket.io connection\nuseEffect(()=>{if(user){// Connect to Socket.io server\nconst socket=io(process.env.REACT_APP_API_URL||'http://localhost:5000');socketRef.current=socket;// Authenticate socket connection\nsocket.emit('authenticate',{userId:user._id});// Listen for new notifications\nsocket.on('notification:new',notification=>{console.log('New notification received:',notification);setNotifications(prev=>[notification,...prev]);setUnreadCount(prev=>prev+1);// Show browser notification if supported\nif(Notification&&Notification.permission==='granted'){new Notification(notification.title,{body:notification.message,icon:'/favicon.ico'});}});// Clean up on unmount\nreturn()=>{if(socket){socket.off('notification:new');socket.disconnect();}};}},[user]);// Request notification permissions\nuseEffect(()=>{if(Notification&&Notification.permission!=='granted'&&Notification.permission!=='denied'){Notification.requestPermission();}},[]);// Fetch notifications when user is logged in\nuseEffect(()=>{if(user){fetchNotifications();}},[user]);// Fetch notifications from the server\nconst fetchNotifications=async()=>{setLoading(true);try{const token=localStorage.getItem('token');if(!token){setLoading(false);return;}const res=await axios.get('/api/notifications',{headers:{'Authorization':\"Bearer \".concat(token)}});if(Array.isArray(res.data)){setNotifications(res.data);setUnreadCount(res.data.filter(notif=>!notif.read).length);}else{console.error('Unexpected notifications format:',res.data);}}catch(err){console.error('Error fetching notifications:',err);}finally{setLoading(false);}};// Mark a notification as read\nconst markAsRead=async id=>{try{const token=localStorage.getItem('token');await axios.put(\"/api/notifications/\".concat(id,\"/read\"),{},{headers:{'Authorization':\"Bearer \".concat(token)}});setNotifications(prev=>prev.map(notif=>notif._id===id?_objectSpread(_objectSpread({},notif),{},{read:true}):notif));setUnreadCount(prev=>Math.max(0,prev-1));return true;}catch(err){console.error('Error marking notification as read:',err);return false;}};// Mark all notifications as read\nconst markAllAsRead=async()=>{try{const token=localStorage.getItem('token');await axios.put('/api/notifications/read-all',{},{headers:{'Authorization':\"Bearer \".concat(token)}});setNotifications(prev=>prev.map(notif=>_objectSpread(_objectSpread({},notif),{},{read:true})));setUnreadCount(0);return true;}catch(err){console.error('Error marking all notifications as read:',err);return false;}};// Delete a notification\nconst deleteNotification=async id=>{try{const token=localStorage.getItem('token');await axios.delete(\"/api/notifications/\".concat(id),{headers:{'Authorization':\"Bearer \".concat(token)}});const notifToDelete=notifications.find(n=>n._id===id);if(notifToDelete&&!notifToDelete.read){setUnreadCount(prev=>Math.max(0,prev-1));}setNotifications(prev=>prev.filter(notif=>notif._id!==id));return true;}catch(err){console.error('Error deleting notification:',err);return false;}};// Create mock notifications if API doesn't exist\nconst createMockNotifications=()=>{const mockData=[{_id:'1',title:'New task assigned',message:'You have been assigned a new task in Website Redesign project',type:'task',read:false,createdAt:new Date(Date.now()-2*60*60*1000).toISOString()},{_id:'2',title:'Meeting scheduled',message:'Team meeting scheduled for tomorrow at 10:00 AM',type:'meeting',read:false,createdAt:new Date(Date.now()-5*60*60*1000).toISOString()},{_id:'3',title:'Project deadline approaching',message:'The deadline for Marketing Campaign project is approaching',type:'deadline',read:true,createdAt:new Date(Date.now()-24*60*60*1000).toISOString()}];setNotifications(mockData);setUnreadCount(mockData.filter(n=>!n.read).length);};// Use mock data if real API fails\nuseEffect(()=>{if(user&&notifications.length===0){createMockNotifications();}},[user,notifications.length]);return/*#__PURE__*/_jsx(NotificationContext.Provider,{value:{notifications,unreadCount,loading,fetchNotifications,markAsRead,markAllAsRead,deleteNotification},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useRef","axios","io","jsx","_jsx","NotificationContext","NotificationProvider","_ref","children","notifications","setNotifications","unreadCount","setUnreadCount","loading","setLoading","user","setUser","socketRef","token","localStorage","getItem","fetchUser","res","get","headers","concat","withCredentials","data","err","console","error","socket","process","env","REACT_APP_API_URL","current","emit","userId","_id","on","notification","log","prev","Notification","permission","title","body","message","icon","off","disconnect","requestPermission","fetchNotifications","Array","isArray","filter","notif","read","length","markAsRead","id","put","map","_objectSpread","Math","max","markAllAsRead","deleteNotification","delete","notifToDelete","find","n","createMockNotifications","mockData","type","createdAt","Date","now","toISOString","Provider","value"],"sources":["C:/Users/DELL/OneDrive/Desktop/collabeaseproject/collabeasesorce/collabease/client/src/context/NotificationContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\n\r\nexport const NotificationContext = createContext();\r\n\r\nexport const NotificationProvider = ({ children }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const socketRef = useRef(null);\r\n\r\n  // Update user when auth changes\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // Fetch current user\r\n      const fetchUser = async () => {\r\n        try {\r\n          const res = await axios.get('/auth/current-user', {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`\r\n            },\r\n            withCredentials: true\r\n          });\r\n          if (res.data && res.data.user) {\r\n            setUser(res.data.user);\r\n          }\r\n        } catch (err) {\r\n          console.error('Error fetching user in NotificationContext:', err);\r\n        }\r\n      };\r\n      \r\n      fetchUser();\r\n    } else {\r\n      setUser(null);\r\n    }\r\n  }, []);\r\n\r\n  // Set up Socket.io connection\r\n  useEffect(() => {\r\n    if (user) {\r\n      // Connect to Socket.io server\r\n      const socket = io(process.env.REACT_APP_API_URL || 'http://localhost:5000');\r\n      socketRef.current = socket;\r\n      \r\n      // Authenticate socket connection\r\n      socket.emit('authenticate', { userId: user._id });\r\n      \r\n      // Listen for new notifications\r\n      socket.on('notification:new', (notification) => {\r\n        console.log('New notification received:', notification);\r\n        setNotifications(prev => [notification, ...prev]);\r\n        setUnreadCount(prev => prev + 1);\r\n        \r\n        // Show browser notification if supported\r\n        if (Notification && Notification.permission === 'granted') {\r\n          new Notification(notification.title, {\r\n            body: notification.message,\r\n            icon: '/favicon.ico'\r\n          });\r\n        }\r\n      });\r\n      \r\n      // Clean up on unmount\r\n      return () => {\r\n        if (socket) {\r\n          socket.off('notification:new');\r\n          socket.disconnect();\r\n        }\r\n      };\r\n    }\r\n  }, [user]);\r\n\r\n  // Request notification permissions\r\n  useEffect(() => {\r\n    if (Notification && Notification.permission !== 'granted' && Notification.permission !== 'denied') {\r\n      Notification.requestPermission();\r\n    }\r\n  }, []);\r\n\r\n  // Fetch notifications when user is logged in\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchNotifications();\r\n    }\r\n  }, [user]);\r\n\r\n  // Fetch notifications from the server\r\n  const fetchNotifications = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      const res = await axios.get('/api/notifications', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (Array.isArray(res.data)) {\r\n        setNotifications(res.data);\r\n        setUnreadCount(res.data.filter(notif => !notif.read).length);\r\n      } else {\r\n        console.error('Unexpected notifications format:', res.data);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching notifications:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Mark a notification as read\r\n  const markAsRead = async (id) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.put(`/api/notifications/${id}/read`, {}, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      setNotifications(prev => \r\n        prev.map(notif => \r\n          notif._id === id ? { ...notif, read: true } : notif\r\n        )\r\n      );\r\n      \r\n      setUnreadCount(prev => Math.max(0, prev - 1));\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error marking notification as read:', err);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Mark all notifications as read\r\n  const markAllAsRead = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.put('/api/notifications/read-all', {}, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      setNotifications(prev => \r\n        prev.map(notif => ({ ...notif, read: true }))\r\n      );\r\n      \r\n      setUnreadCount(0);\r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error marking all notifications as read:', err);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Delete a notification\r\n  const deleteNotification = async (id) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.delete(`/api/notifications/${id}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      const notifToDelete = notifications.find(n => n._id === id);\r\n      if (notifToDelete && !notifToDelete.read) {\r\n        setUnreadCount(prev => Math.max(0, prev - 1));\r\n      }\r\n      \r\n      setNotifications(prev => \r\n        prev.filter(notif => notif._id !== id)\r\n      );\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error deleting notification:', err);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Create mock notifications if API doesn't exist\r\n  const createMockNotifications = () => {\r\n    const mockData = [\r\n      {\r\n        _id: '1',\r\n        title: 'New task assigned',\r\n        message: 'You have been assigned a new task in Website Redesign project',\r\n        type: 'task',\r\n        read: false,\r\n        createdAt: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString()\r\n      },\r\n      {\r\n        _id: '2',\r\n        title: 'Meeting scheduled',\r\n        message: 'Team meeting scheduled for tomorrow at 10:00 AM',\r\n        type: 'meeting',\r\n        read: false,\r\n        createdAt: new Date(Date.now() - 5 * 60 * 60 * 1000).toISOString()\r\n      },\r\n      {\r\n        _id: '3',\r\n        title: 'Project deadline approaching',\r\n        message: 'The deadline for Marketing Campaign project is approaching',\r\n        type: 'deadline',\r\n        read: true,\r\n        createdAt: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString()\r\n      }\r\n    ];\r\n    \r\n    setNotifications(mockData);\r\n    setUnreadCount(mockData.filter(n => !n.read).length);\r\n  };\r\n\r\n  // Use mock data if real API fails\r\n  useEffect(() => {\r\n    if (user && notifications.length === 0) {\r\n      createMockNotifications();\r\n    }\r\n  }, [user, notifications.length]);\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{\r\n        notifications,\r\n        unreadCount,\r\n        loading,\r\n        fetchNotifications,\r\n        markAsRead,\r\n        markAllAsRead,\r\n        deleteNotification\r\n      }}\r\n    >\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}