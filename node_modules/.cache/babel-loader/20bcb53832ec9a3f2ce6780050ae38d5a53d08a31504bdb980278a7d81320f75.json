{"ast":null,"code":"import _objectSpread from\"C:/Users/DELL/OneDrive/Desktop/collabeaseproject/collabeasesorce/collabease/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useContext}from'react';import axios from'axios';import{motion}from'framer-motion';import{AuthContext}from'../context/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000';const ProjectAutomations=_ref=>{let{projectId,isOwner}=_ref;const{user}=useContext(AuthContext);const[automations,setAutomations]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[showAddModal,setShowAddModal]=useState(false);const[newAutomation,setNewAutomation]=useState({name:'',description:'',trigger_type:'status_change',trigger_value:'Done',action_type:'notify',action_payload:{message:'Task has been completed!'}});// Fetch automations\nuseEffect(()=>{const fetchAutomations=async()=>{try{setLoading(true);setError(null);console.log('Fetching automations for project:',projectId);const token=localStorage.getItem('token');if(!token){console.error('No authentication token available');setError('Authentication token missing. Please log in again.');setLoading(false);return;}// Make sure we're using the full API URL\nconst response=await axios.get(\"\".concat(API_BASE_URL,\"/api/automations/project/\").concat(projectId),{headers:{Authorization:\"Bearer \".concat(token)}});console.log('Received automation data:',response.data);setAutomations(response.data||[]);setLoading(false);}catch(err){console.error('Error fetching automations:',err);let errorMessage='Failed to load automations. Please try again.';if(err.response){console.error('Server responded with error:',err.response.status,err.response.data);if(err.response.status===401){errorMessage='Your session has expired. Please log in again.';}else if(err.response.status===403){errorMessage='You do not have permission to view these automations.';}else if(err.response.status===404){errorMessage='Project not found or has been deleted.';}else{errorMessage=err.response.data.message||errorMessage;}}else if(err.request){console.error('No response received:',err.request);errorMessage='Server not responding. Please check your connection.';}setError(errorMessage);setLoading(false);}};if(projectId){fetchAutomations();}else{console.error('No projectId provided');setError('Project ID is missing. Cannot load automations.');setLoading(false);}},[projectId]);// Handle form input changes\nconst handleInputChange=e=>{const{name,value}=e.target;if(name==='trigger_type'){// Set appropriate default trigger value based on trigger type\nlet defaultTriggerValue='';switch(value){case'status_change':defaultTriggerValue='Done';break;case'assignment':defaultTriggerValue='';// Will be a user ID in practice\nbreak;case'due_date_passed':defaultTriggerValue=null;// No specific value needed\nbreak;default:defaultTriggerValue='';}setNewAutomation(_objectSpread(_objectSpread({},newAutomation),{},{trigger_type:value,trigger_value:defaultTriggerValue}));}else if(name==='action_type'){// Set appropriate default action payload based on action type\nlet defaultActionPayload={};switch(value){case'assign_badge':defaultActionPayload={badge_id:'task_completer'};break;case'change_status':defaultActionPayload={new_status:'In Progress'};break;case'notify':defaultActionPayload={message:'Automated notification'};break;default:defaultActionPayload={};}setNewAutomation(_objectSpread(_objectSpread({},newAutomation),{},{action_type:value,action_payload:defaultActionPayload}));}else if(name==='trigger_value'){setNewAutomation(_objectSpread(_objectSpread({},newAutomation),{},{trigger_value:value}));}else if(name.startsWith('action_payload.')){const field=name.split('.')[1];setNewAutomation(_objectSpread(_objectSpread({},newAutomation),{},{action_payload:_objectSpread(_objectSpread({},newAutomation.action_payload),{},{[field]:value})}));}else{setNewAutomation(_objectSpread(_objectSpread({},newAutomation),{},{[name]:value}));}};// Create a new automation\nconst handleCreateAutomation=async e=>{e.preventDefault();try{setError(null);const token=localStorage.getItem('token');if(!token){setError('Authentication token missing. Please log in again.');return;}// Validate required fields\nif(!newAutomation.name||!newAutomation.trigger_type||!newAutomation.action_type){setError('Please fill in all required fields (name, trigger type, and action type).');return;}// Ensure the projectId is properly formatted\nif(!projectId){setError('Project ID is missing. Please reload the page and try again.');return;}const automationData=_objectSpread(_objectSpread({},newAutomation),{},{projectId,created_by:(user===null||user===void 0?void 0:user._id)||null// Use current user ID\n});console.log('Creating new automation with data:',JSON.stringify(automationData));// Make sure we're using the full API URL\nconst response=await axios.post(\"\".concat(API_BASE_URL,\"/api/automations\"),automationData,{headers:{Authorization:\"Bearer \".concat(token),'Content-Type':'application/json'}});console.log('Automation created with response:',response.data);// Add the new automation to state\nsetAutomations(prevAutomations=>[...prevAutomations,response.data]);setShowAddModal(false);// Reset form\nsetNewAutomation({name:'',description:'',trigger_type:'status_change',trigger_value:'Done',action_type:'notify',action_payload:{message:'Task has been completed!'}});}catch(err){console.error('Error creating automation:',err);let errorMessage='Failed to create automation. Please try again.';if(err.response){console.error('Server error details:',err.response.status,err.response.data);if(err.response.status===401){errorMessage='Your session has expired. Please log in again.';}else if(err.response.status===403){errorMessage='You do not have permission to create automations. Only project owners can create automations.';}else if(err.response.status===400){errorMessage='Invalid automation data. Please check all fields and try again.';}else{errorMessage=err.response.data.message||errorMessage;}}else if(err.request){console.error('No response received:',err.request);errorMessage='Server not responding. Please check your connection.';}setError(errorMessage);}};// Toggle automation active status\nconst toggleAutomationStatus=async(id,currentStatus)=>{try{const token=localStorage.getItem('token');await axios.put(\"\".concat(API_BASE_URL,\"/api/automations/\").concat(id),{isActive:!currentStatus},{headers:{Authorization:\"Bearer \".concat(token)}});// Update local state\nsetAutomations(automations.map(automation=>automation._id===id?_objectSpread(_objectSpread({},automation),{},{isActive:!automation.isActive}):automation));}catch(err){console.error('Error toggling automation status:',err);setError('Failed to update automation. Please try again.');}};// Delete an automation\nconst deleteAutomation=async id=>{if(!window.confirm('Are you sure you want to delete this automation?')){return;}try{const token=localStorage.getItem('token');await axios.delete(\"\".concat(API_BASE_URL,\"/api/automations/\").concat(id),{headers:{Authorization:\"Bearer \".concat(token)}});// Update local state\nsetAutomations(automations.filter(automation=>automation._id!==id));}catch(err){console.error('Error deleting automation:',err);setError('Failed to delete automation. Please try again.');}};// Create sample automations\nconst createSampleAutomations=async()=>{try{setLoading(true);setError(null);const token=localStorage.getItem('token');if(!token){setError('Authentication token missing. Please log in again.');setLoading(false);return;}// Validate projectId\nif(!projectId){console.error('No projectId provided for sample automations');setError('Project ID is missing. Cannot create automations.');setLoading(false);return;}console.log(\"Creating sample automations for project: \".concat(projectId));const sampleAutomations=[{projectId,name:\"Task Completion Notification\",description:\"Send a notification when a task is marked as done\",trigger_type:\"status_change\",trigger_value:\"Done\",action_type:\"notify\",action_payload:{message:\"A task has been completed! ðŸŽ‰\"}},{projectId,name:\"Task Completer Badge\",description:\"Award a badge when a user completes a task\",trigger_type:\"status_change\",trigger_value:\"Done\",action_type:\"assign_badge\",action_payload:{badge_id:\"task_completer\"}},{projectId,name:\"Auto Start on Assignment\",description:\"Move task to In Progress when assigned\",trigger_type:\"assignment\",trigger_value:null,// Any assignment\naction_type:\"change_status\",action_payload:{new_status:\"In Progress\"}}];console.log(\"Creating \".concat(sampleAutomations.length,\" sample automations for project \").concat(projectId));const newAutomations=[];let errorOccurred=false;for(const automation of sampleAutomations){try{console.log('Creating sample automation:',JSON.stringify(automation));const response=await axios.post(\"\".concat(API_BASE_URL,\"/api/automations\"),automation,{headers:{Authorization:\"Bearer \".concat(token),'Content-Type':'application/json'}});console.log('Sample automation created:',response.data._id);newAutomations.push(response.data);}catch(error){var _error$response;console.error(\"Failed to create sample automation \\\"\".concat(automation.name,\"\\\":\"),error);console.error('Error response:',(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);errorOccurred=true;}}if(newAutomations.length>0){console.log(\"Successfully created \".concat(newAutomations.length,\" sample automations\"));setAutomations([...automations,...newAutomations]);if(errorOccurred){setError(\"Created \".concat(newAutomations.length,\" out of \").concat(sampleAutomations.length,\" sample automations. Some automations could not be created.\"));}}else{setError('Failed to create any sample automations. Please try again or create automations manually.');}setLoading(false);}catch(err){console.error('Error creating sample automations:',err);let errorMessage='Failed to create sample automations. Please try again.';if(err.response){console.error('Server error details:',err.response.status,err.response.data);if(err.response.status===401){errorMessage='Your session has expired. Please log in again.';}else if(err.response.status===403){errorMessage='You do not have permission to create automations. Only project owners can create automations.';}else{errorMessage=err.response.data.message||errorMessage;}}else if(err.request){errorMessage='Server not responding. Please check your connection.';}setError(errorMessage);setLoading(false);}};// Render trigger value form field based on trigger type\nconst renderTriggerValueField=()=>{switch(newAutomation.trigger_type){case'status_change':return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\",children:\"Status Value\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"trigger_value\",className:\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\",value:newAutomation.trigger_value||'',onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"To Do\",children:\"To Do\"}),/*#__PURE__*/_jsx(\"option\",{value:\"In Progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Done\",children:\"Done\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Blocked\",children:\"Blocked\"})]})]});case'assignment':return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\",children:\"Assigned User (optional)\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mb-1 dark:text-gray-400\",children:\"Leave blank to trigger for any user assignment\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"trigger_value\",placeholder:\"User ID (optional)\",className:\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\",value:newAutomation.trigger_value||'',onChange:handleInputChange})]});case'due_date_passed':return/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400\",children:\"This automation will trigger when a task's due date passes.\"})});default:return null;}};// Render action payload form fields based on action type\nconst renderActionPayloadFields=()=>{var _newAutomation$action,_newAutomation$action2,_newAutomation$action3;switch(newAutomation.action_type){case'assign_badge':return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\",children:\"Badge Code\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"action_payload.badge_id\",className:\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\",value:((_newAutomation$action=newAutomation.action_payload)===null||_newAutomation$action===void 0?void 0:_newAutomation$action.badge_id)||'',onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"task_completer\",children:\"Task Completer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"productivity_star\",children:\"Productivity Star\"}),/*#__PURE__*/_jsx(\"option\",{value:\"team_player\",children:\"Team Player\"}),/*#__PURE__*/_jsx(\"option\",{value:\"early_finisher\",children:\"Early Finisher\"})]})]});case'change_status':return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\",children:\"New Status\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"action_payload.new_status\",className:\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\",value:((_newAutomation$action2=newAutomation.action_payload)===null||_newAutomation$action2===void 0?void 0:_newAutomation$action2.new_status)||'',onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"To Do\",children:\"To Do\"}),/*#__PURE__*/_jsx(\"option\",{value:\"In Progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Done\",children:\"Done\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Blocked\",children:\"Blocked\"})]})]});case'notify':return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\",children:\"Notification Message\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"action_payload.message\",placeholder:\"Message to send\",className:\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\",value:((_newAutomation$action3=newAutomation.action_payload)===null||_newAutomation$action3===void 0?void 0:_newAutomation$action3.message)||'',onChange:handleInputChange})]});default:return null;}};// Get human-readable trigger description\nconst getTriggerDescription=automation=>{const{trigger_type,trigger_value}=automation;switch(trigger_type){case'status_change':return\"When a task is moved to \\\"\".concat(trigger_value,\"\\\"\");case'assignment':return trigger_value?\"When a task is assigned to a specific user\":\"When a task is assigned to any user\";case'due_date_passed':return\"When a task's due date passes\";default:return'Unknown trigger';}};// Get human-readable action description\nconst getActionDescription=automation=>{const{action_type,action_payload}=automation;switch(action_type){case'assign_badge':return\"Assign \\\"\".concat((action_payload===null||action_payload===void 0?void 0:action_payload.badge_id)||'unknown',\"\\\" badge\");case'change_status':return\"Move task to \\\"\".concat((action_payload===null||action_payload===void 0?void 0:action_payload.new_status)||'unknown',\"\\\"\");case'notify':return\"Send notification: \\\"\".concat((action_payload===null||action_payload===void 0?void 0:action_payload.message)||'unknown',\"\\\"\");default:return'Unknown action';}};// Render loading state\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"})});}// Debug output for ownership\nconsole.log('ProjectAutomations debug:',{projectId,isOwner,userId:user===null||user===void 0?void 0:user._id,userEmail:user===null||user===void 0?void 0:user.email});return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6 dark:bg-gray-800 dark:text-gray-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold\",children:\"Workflow Automations\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowAddModal(true),className:\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition dark:bg-primary-700 dark:hover:bg-primary-800\",children:\"Add Automation\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4 dark:bg-red-900/30 dark:border-red-800 dark:text-red-400\",children:error}),automations.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"mx-auto h-16 w-16 text-gray-400 dark:text-gray-600\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:1,d:\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"mt-4 text-lg font-medium text-gray-700 dark:text-gray-300\",children:\"No automations yet\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-gray-500 dark:text-gray-400\",children:\"Create your first automation to automate workflows in your project.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex flex-col sm:flex-row items-center justify-center gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{console.log('Create Automation button clicked');setShowAddModal(true);},className:\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition dark:bg-primary-700 dark:hover:bg-primary-800\",children:\"Create Automation\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{console.log('Add Sample Automations button clicked');createSampleAutomations();},className:\"px-4 py-2 bg-gray-100 text-gray-800 rounded-md hover:bg-gray-200 transition dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600\",children:\"Add Sample Automations\"})]})]}):/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-4\",children:automations.map(automation=>/*#__PURE__*/_jsx(motion.li,{initial:{opacity:0,y:10},animate:{opacity:1,y:0},className:\"border rounded-lg p-4 \".concat(automation.isActive?'border-green-300 bg-green-50 dark:border-green-800 dark:bg-green-900/20':'border-gray-300 bg-gray-50 dark:border-gray-700 dark:bg-gray-700/30'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-lg\",children:automation.name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 text-sm dark:text-gray-400\",children:automation.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-primary-600 dark:text-primary-400 mr-2\",children:\"Trigger:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-700 dark:text-gray-300\",children:getTriggerDescription(automation)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium text-primary-600 dark:text-primary-400 mr-2\",children:\"Action:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-700 dark:text-gray-300\",children:getActionDescription(automation)})]})]})]}),isOwner&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleAutomationStatus(automation._id,automation.isActive),className:\"px-3 py-1 rounded text-sm \".concat(automation.isActive?'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300':'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300'),children:automation.isActive?'Disable':'Enable'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteAutomation(automation._id),className:\"px-3 py-1 bg-red-100 text-red-800 rounded text-sm dark:bg-red-900/30 dark:text-red-300\",children:\"Delete\"})]})]})},automation._id))}),showAddModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 dark:bg-opacity-70\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md dark:bg-gray-800\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold\",children:\"Create Automation\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowAddModal(false),className:\"text-gray-400 hover:text-gray-600 dark:text-gray-300 dark:hover:text-gray-100\",children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-6 w-6\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M6 18L18 6M6 6l12 12\"})})})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCreateAutomation,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",placeholder:\"Automation name\",className:\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\",value:newAutomation.name,onChange:handleInputChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\",children:\"Description\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"description\",placeholder:\"Automation description\",className:\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\",value:newAutomation.description,onChange:handleInputChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\",children:\"Trigger Type\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"trigger_type\",className:\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\",value:newAutomation.trigger_type,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"status_change\",children:\"Task Status Change\"}),/*#__PURE__*/_jsx(\"option\",{value:\"assignment\",children:\"Task Assignment\"}),/*#__PURE__*/_jsx(\"option\",{value:\"due_date_passed\",children:\"Due Date Passed\"})]})]}),renderTriggerValueField(),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\",children:\"Action Type\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"action_type\",className:\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\",value:newAutomation.action_type,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"assign_badge\",children:\"Assign Badge\"}),/*#__PURE__*/_jsx(\"option\",{value:\"change_status\",children:\"Change Status\"}),/*#__PURE__*/_jsx(\"option\",{value:\"notify\",children:\"Send Notification\"})]})]}),renderActionPayloadFields(),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3 mt-6\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowAddModal(false),className:\"px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-50 dark:border-gray-600 dark:hover:bg-gray-700 dark:text-white\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 dark:bg-primary-700 dark:hover:bg-primary-800\",children:\"Create\"})]})]})]})})]});};export default ProjectAutomations;","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","motion","AuthContext","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","REACT_APP_API_URL","ProjectAutomations","_ref","projectId","isOwner","user","automations","setAutomations","loading","setLoading","error","setError","showAddModal","setShowAddModal","newAutomation","setNewAutomation","name","description","trigger_type","trigger_value","action_type","action_payload","message","fetchAutomations","console","log","token","localStorage","getItem","response","get","concat","headers","Authorization","data","err","errorMessage","status","request","handleInputChange","e","value","target","defaultTriggerValue","_objectSpread","defaultActionPayload","badge_id","new_status","startsWith","field","split","handleCreateAutomation","preventDefault","automationData","created_by","_id","JSON","stringify","post","prevAutomations","toggleAutomationStatus","id","currentStatus","put","isActive","map","automation","deleteAutomation","window","confirm","delete","filter","createSampleAutomations","sampleAutomations","length","newAutomations","errorOccurred","push","_error$response","renderTriggerValueField","className","children","onChange","type","placeholder","renderActionPayloadFields","_newAutomation$action","_newAutomation$action2","_newAutomation$action3","getTriggerDescription","getActionDescription","userId","userEmail","email","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","li","initial","opacity","y","animate","xmlns","onSubmit","required"],"sources":["C:/Users/DELL/OneDrive/Desktop/collabeaseproject/collabeasesorce/collabease/client/src/components/ProjectAutomations.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\nimport { AuthContext } from '../context/AuthContext';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nconst ProjectAutomations = ({ projectId, isOwner }) => {\n  const { user } = useContext(AuthContext);\n  const [automations, setAutomations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [newAutomation, setNewAutomation] = useState({\n    name: '',\n    description: '',\n    trigger_type: 'status_change',\n    trigger_value: 'Done',\n    action_type: 'notify',\n    action_payload: { message: 'Task has been completed!' }\n  });\n\n  // Fetch automations\n  useEffect(() => {\n    const fetchAutomations = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        console.log('Fetching automations for project:', projectId);\n        const token = localStorage.getItem('token');\n        \n        if (!token) {\n          console.error('No authentication token available');\n          setError('Authentication token missing. Please log in again.');\n          setLoading(false);\n          return;\n        }\n        \n        // Make sure we're using the full API URL\n        const response = await axios.get(`${API_BASE_URL}/api/automations/project/${projectId}`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        \n        console.log('Received automation data:', response.data);\n        setAutomations(response.data || []);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching automations:', err);\n        let errorMessage = 'Failed to load automations. Please try again.';\n        \n        if (err.response) {\n          console.error('Server responded with error:', err.response.status, err.response.data);\n          \n          if (err.response.status === 401) {\n            errorMessage = 'Your session has expired. Please log in again.';\n          } else if (err.response.status === 403) {\n            errorMessage = 'You do not have permission to view these automations.';\n          } else if (err.response.status === 404) {\n            errorMessage = 'Project not found or has been deleted.';\n          } else {\n            errorMessage = err.response.data.message || errorMessage;\n          }\n        } else if (err.request) {\n          console.error('No response received:', err.request);\n          errorMessage = 'Server not responding. Please check your connection.';\n        }\n        \n        setError(errorMessage);\n        setLoading(false);\n      }\n    };\n\n    if (projectId) {\n      fetchAutomations();\n    } else {\n      console.error('No projectId provided');\n      setError('Project ID is missing. Cannot load automations.');\n      setLoading(false);\n    }\n  }, [projectId]);\n\n  // Handle form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    if (name === 'trigger_type') {\n      // Set appropriate default trigger value based on trigger type\n      let defaultTriggerValue = '';\n      \n      switch (value) {\n        case 'status_change':\n          defaultTriggerValue = 'Done';\n          break;\n        case 'assignment':\n          defaultTriggerValue = ''; // Will be a user ID in practice\n          break;\n        case 'due_date_passed':\n          defaultTriggerValue = null; // No specific value needed\n          break;\n        default:\n          defaultTriggerValue = '';\n      }\n      \n      setNewAutomation({\n        ...newAutomation,\n        trigger_type: value,\n        trigger_value: defaultTriggerValue\n      });\n    } else if (name === 'action_type') {\n      // Set appropriate default action payload based on action type\n      let defaultActionPayload = {};\n      \n      switch (value) {\n        case 'assign_badge':\n          defaultActionPayload = { badge_id: 'task_completer' };\n          break;\n        case 'change_status':\n          defaultActionPayload = { new_status: 'In Progress' };\n          break;\n        case 'notify':\n          defaultActionPayload = { message: 'Automated notification' };\n          break;\n        default:\n          defaultActionPayload = {};\n      }\n      \n      setNewAutomation({\n        ...newAutomation,\n        action_type: value,\n        action_payload: defaultActionPayload\n      });\n    } else if (name === 'trigger_value') {\n      setNewAutomation({\n        ...newAutomation,\n        trigger_value: value\n      });\n    } else if (name.startsWith('action_payload.')) {\n      const field = name.split('.')[1];\n      setNewAutomation({\n        ...newAutomation,\n        action_payload: {\n          ...newAutomation.action_payload,\n          [field]: value\n        }\n      });\n    } else {\n      setNewAutomation({\n        ...newAutomation,\n        [name]: value\n      });\n    }\n  };\n\n  // Create a new automation\n  const handleCreateAutomation = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setError(null);\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Authentication token missing. Please log in again.');\n        return;\n      }\n      \n      // Validate required fields\n      if (!newAutomation.name || !newAutomation.trigger_type || !newAutomation.action_type) {\n        setError('Please fill in all required fields (name, trigger type, and action type).');\n        return;\n      }\n      \n      // Ensure the projectId is properly formatted\n      if (!projectId) {\n        setError('Project ID is missing. Please reload the page and try again.');\n        return;\n      }\n      \n      const automationData = {\n        ...newAutomation,\n        projectId,\n        created_by: user?._id || null // Use current user ID\n      };\n      \n      console.log('Creating new automation with data:', JSON.stringify(automationData));\n      \n      // Make sure we're using the full API URL\n      const response = await axios.post(`${API_BASE_URL}/api/automations`, \n        automationData,\n        {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n      console.log('Automation created with response:', response.data);\n      \n      // Add the new automation to state\n      setAutomations(prevAutomations => [...prevAutomations, response.data]);\n      setShowAddModal(false);\n      \n      // Reset form\n      setNewAutomation({\n        name: '',\n        description: '',\n        trigger_type: 'status_change',\n        trigger_value: 'Done',\n        action_type: 'notify',\n        action_payload: { message: 'Task has been completed!' }\n      });\n    } catch (err) {\n      console.error('Error creating automation:', err);\n      \n      let errorMessage = 'Failed to create automation. Please try again.';\n      \n      if (err.response) {\n        console.error('Server error details:', err.response.status, err.response.data);\n        \n        if (err.response.status === 401) {\n          errorMessage = 'Your session has expired. Please log in again.';\n        } else if (err.response.status === 403) {\n          errorMessage = 'You do not have permission to create automations. Only project owners can create automations.';\n        } else if (err.response.status === 400) {\n          errorMessage = 'Invalid automation data. Please check all fields and try again.';\n        } else {\n          errorMessage = err.response.data.message || errorMessage;\n        }\n      } else if (err.request) {\n        console.error('No response received:', err.request);\n        errorMessage = 'Server not responding. Please check your connection.';\n      }\n      \n      setError(errorMessage);\n    }\n  };\n\n  // Toggle automation active status\n  const toggleAutomationStatus = async (id, currentStatus) => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put(`${API_BASE_URL}/api/automations/${id}`,\n        {\n          isActive: !currentStatus\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n      \n      // Update local state\n      setAutomations(automations.map(automation => \n        automation._id === id \n          ? { ...automation, isActive: !automation.isActive } \n          : automation\n      ));\n    } catch (err) {\n      console.error('Error toggling automation status:', err);\n      setError('Failed to update automation. Please try again.');\n    }\n  };\n  \n  // Delete an automation\n  const deleteAutomation = async (id) => {\n    if (!window.confirm('Are you sure you want to delete this automation?')) {\n      return;\n    }\n    \n    try {\n      const token = localStorage.getItem('token');\n      await axios.delete(`${API_BASE_URL}/api/automations/${id}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      // Update local state\n      setAutomations(automations.filter(automation => automation._id !== id));\n    } catch (err) {\n      console.error('Error deleting automation:', err);\n      setError('Failed to delete automation. Please try again.');\n    }\n  };\n\n  // Create sample automations\n  const createSampleAutomations = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Authentication token missing. Please log in again.');\n        setLoading(false);\n        return;\n      }\n      \n      // Validate projectId\n      if (!projectId) {\n        console.error('No projectId provided for sample automations');\n        setError('Project ID is missing. Cannot create automations.');\n        setLoading(false);\n        return;\n      }\n      \n      console.log(`Creating sample automations for project: ${projectId}`);\n      \n      const sampleAutomations = [\n        {\n          projectId,\n          name: \"Task Completion Notification\",\n          description: \"Send a notification when a task is marked as done\",\n          trigger_type: \"status_change\",\n          trigger_value: \"Done\",\n          action_type: \"notify\",\n          action_payload: { message: \"A task has been completed! ðŸŽ‰\" }\n        },\n        {\n          projectId,\n          name: \"Task Completer Badge\",\n          description: \"Award a badge when a user completes a task\",\n          trigger_type: \"status_change\",\n          trigger_value: \"Done\",\n          action_type: \"assign_badge\",\n          action_payload: { badge_id: \"task_completer\" }\n        },\n        {\n          projectId,\n          name: \"Auto Start on Assignment\",\n          description: \"Move task to In Progress when assigned\",\n          trigger_type: \"assignment\",\n          trigger_value: null, // Any assignment\n          action_type: \"change_status\",\n          action_payload: { new_status: \"In Progress\" }\n        }\n      ];\n      \n      console.log(`Creating ${sampleAutomations.length} sample automations for project ${projectId}`);\n      \n      const newAutomations = [];\n      let errorOccurred = false;\n      \n      for (const automation of sampleAutomations) {\n        try {\n          console.log('Creating sample automation:', JSON.stringify(automation));\n          const response = await axios.post(`${API_BASE_URL}/api/automations`, \n            automation,\n            {\n              headers: { \n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              }\n            }\n          );\n          \n          console.log('Sample automation created:', response.data._id);\n          newAutomations.push(response.data);\n        } catch (error) {\n          console.error(`Failed to create sample automation \"${automation.name}\":`, error);\n          console.error('Error response:', error.response?.data);\n          errorOccurred = true;\n        }\n      }\n      \n      if (newAutomations.length > 0) {\n        console.log(`Successfully created ${newAutomations.length} sample automations`);\n        setAutomations([...automations, ...newAutomations]);\n        \n        if (errorOccurred) {\n          setError(`Created ${newAutomations.length} out of ${sampleAutomations.length} sample automations. Some automations could not be created.`);\n        }\n      } else {\n        setError('Failed to create any sample automations. Please try again or create automations manually.');\n      }\n      \n      setLoading(false);\n    } catch (err) {\n      console.error('Error creating sample automations:', err);\n      \n      let errorMessage = 'Failed to create sample automations. Please try again.';\n      if (err.response) {\n        console.error('Server error details:', err.response.status, err.response.data);\n        \n        if (err.response.status === 401) {\n          errorMessage = 'Your session has expired. Please log in again.';\n        } else if (err.response.status === 403) {\n          errorMessage = 'You do not have permission to create automations. Only project owners can create automations.';\n        } else {\n          errorMessage = err.response.data.message || errorMessage;\n        }\n      } else if (err.request) {\n        errorMessage = 'Server not responding. Please check your connection.';\n      }\n      \n      setError(errorMessage);\n      setLoading(false);\n    }\n  };\n\n  // Render trigger value form field based on trigger type\n  const renderTriggerValueField = () => {\n    switch (newAutomation.trigger_type) {\n      case 'status_change':\n        return (\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\">\n              Status Value\n            </label>\n            <select\n              name=\"trigger_value\"\n              className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value={newAutomation.trigger_value || ''}\n              onChange={handleInputChange}\n            >\n              <option value=\"To Do\">To Do</option>\n              <option value=\"In Progress\">In Progress</option>\n              <option value=\"Done\">Done</option>\n              <option value=\"Blocked\">Blocked</option>\n            </select>\n          </div>\n        );\n        \n      case 'assignment':\n        return (\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\">\n              Assigned User (optional)\n            </label>\n            <p className=\"text-xs text-gray-500 mb-1 dark:text-gray-400\">\n              Leave blank to trigger for any user assignment\n            </p>\n            <input\n              type=\"text\"\n              name=\"trigger_value\"\n              placeholder=\"User ID (optional)\"\n              className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value={newAutomation.trigger_value || ''}\n              onChange={handleInputChange}\n            />\n          </div>\n        );\n        \n      case 'due_date_passed':\n        return (\n          <div className=\"mb-4\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              This automation will trigger when a task's due date passes.\n            </p>\n          </div>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  // Render action payload form fields based on action type\n  const renderActionPayloadFields = () => {\n    switch (newAutomation.action_type) {\n      case 'assign_badge':\n        return (\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\">\n              Badge Code\n            </label>\n            <select\n              name=\"action_payload.badge_id\"\n              className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value={newAutomation.action_payload?.badge_id || ''}\n              onChange={handleInputChange}\n            >\n              <option value=\"task_completer\">Task Completer</option>\n              <option value=\"productivity_star\">Productivity Star</option>\n              <option value=\"team_player\">Team Player</option>\n              <option value=\"early_finisher\">Early Finisher</option>\n            </select>\n          </div>\n        );\n        \n      case 'change_status':\n        return (\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\">\n              New Status\n            </label>\n            <select\n              name=\"action_payload.new_status\"\n              className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value={newAutomation.action_payload?.new_status || ''}\n              onChange={handleInputChange}\n            >\n              <option value=\"To Do\">To Do</option>\n              <option value=\"In Progress\">In Progress</option>\n              <option value=\"Done\">Done</option>\n              <option value=\"Blocked\">Blocked</option>\n            </select>\n          </div>\n        );\n        \n      case 'notify':\n        return (\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\">\n              Notification Message\n            </label>\n            <input \n              type=\"text\" \n              name=\"action_payload.message\" \n              placeholder=\"Message to send\" \n              className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n              value={newAutomation.action_payload?.message || ''}\n              onChange={handleInputChange}\n            />\n          </div>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  // Get human-readable trigger description\n  const getTriggerDescription = (automation) => {\n    const { trigger_type, trigger_value } = automation;\n    \n    switch (trigger_type) {\n      case 'status_change':\n        return `When a task is moved to \"${trigger_value}\"`;\n        \n      case 'assignment':\n        return trigger_value \n          ? `When a task is assigned to a specific user`\n          : `When a task is assigned to any user`;\n        \n      case 'due_date_passed':\n        return `When a task's due date passes`;\n        \n      default:\n        return 'Unknown trigger';\n    }\n  };\n\n  // Get human-readable action description\n  const getActionDescription = (automation) => {\n    const { action_type, action_payload } = automation;\n    \n    switch (action_type) {\n      case 'assign_badge':\n        return `Assign \"${action_payload?.badge_id || 'unknown'}\" badge`;\n        \n      case 'change_status':\n        return `Move task to \"${action_payload?.new_status || 'unknown'}\"`;\n        \n      case 'notify':\n        return `Send notification: \"${action_payload?.message || 'unknown'}\"`;\n        \n      default:\n        return 'Unknown action';\n    }\n  };\n\n  // Render loading state\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  // Debug output for ownership\n  console.log('ProjectAutomations debug:', { \n    projectId, \n    isOwner, \n    userId: user?._id, \n    userEmail: user?.email \n  });\n\n  return (\n    <div className=\"bg-white rounded-lg shadow p-6 dark:bg-gray-800 dark:text-gray-200\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold\">Workflow Automations</h2>\n        {/* Always show the Add Automation button for now to debug the issue */}\n        <button\n          onClick={() => setShowAddModal(true)}\n          className=\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition dark:bg-primary-700 dark:hover:bg-primary-800\"\n        >\n          Add Automation\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4 dark:bg-red-900/30 dark:border-red-800 dark:text-red-400\">\n          {error}\n        </div>\n      )}\n\n      {automations.length === 0 ? (\n        <div className=\"text-center py-12\">\n          <svg\n            className=\"mx-auto h-16 w-16 text-gray-400 dark:text-gray-600\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={1}\n              d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\n            />\n          </svg>\n          <h3 className=\"mt-4 text-lg font-medium text-gray-700 dark:text-gray-300\">No automations yet</h3>\n          <p className=\"mt-2 text-gray-500 dark:text-gray-400\">Create your first automation to automate workflows in your project.</p>\n          \n          <div className=\"mt-6 flex flex-col sm:flex-row items-center justify-center gap-3\">\n            <button\n              onClick={() => {\n                console.log('Create Automation button clicked');\n                setShowAddModal(true);\n              }}\n              className=\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 transition dark:bg-primary-700 dark:hover:bg-primary-800\"\n            >\n              Create Automation\n            </button>\n            <button\n              onClick={() => {\n                console.log('Add Sample Automations button clicked');\n                createSampleAutomations();\n              }}\n              className=\"px-4 py-2 bg-gray-100 text-gray-800 rounded-md hover:bg-gray-200 transition dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600\"\n            >\n              Add Sample Automations\n            </button>\n          </div>\n        </div>\n      ) : (\n        <ul className=\"space-y-4\">\n          {automations.map((automation) => (\n            <motion.li\n              key={automation._id}\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: 1, y: 0 }}\n              className={`border rounded-lg p-4 ${\n                automation.isActive \n                  ? 'border-green-300 bg-green-50 dark:border-green-800 dark:bg-green-900/20' \n                  : 'border-gray-300 bg-gray-50 dark:border-gray-700 dark:bg-gray-700/30'\n              }`}\n            >\n              <div className=\"flex justify-between items-start\">\n                <div>\n                  <h3 className=\"font-semibold text-lg\">{automation.name}</h3>\n                  <p className=\"text-gray-600 text-sm dark:text-gray-400\">{automation.description}</p>\n                  \n                  <div className=\"mt-3 space-y-1\">\n                    <div className=\"flex items-center\">\n                      <span className=\"text-sm font-medium text-primary-600 dark:text-primary-400 mr-2\">Trigger:</span>\n                      <span className=\"text-sm text-gray-700 dark:text-gray-300\">{getTriggerDescription(automation)}</span>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <span className=\"text-sm font-medium text-primary-600 dark:text-primary-400 mr-2\">Action:</span>\n                      <span className=\"text-sm text-gray-700 dark:text-gray-300\">{getActionDescription(automation)}</span>\n                    </div>\n                  </div>\n                </div>\n                \n                {isOwner && (\n                  <div className=\"flex space-x-2\">\n                    <button\n                      onClick={() => toggleAutomationStatus(automation._id, automation.isActive)}\n                      className={`px-3 py-1 rounded text-sm ${\n                        automation.isActive \n                          ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300' \n                          : 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300'\n                      }`}\n                    >\n                      {automation.isActive ? 'Disable' : 'Enable'}\n                    </button>\n                    <button\n                      onClick={() => deleteAutomation(automation._id)}\n                      className=\"px-3 py-1 bg-red-100 text-red-800 rounded text-sm dark:bg-red-900/30 dark:text-red-300\"\n                    >\n                      Delete\n                    </button>\n                  </div>\n                )}\n              </div>\n            </motion.li>\n          ))}\n        </ul>\n      )}\n      \n      {/* Add Automation Modal */}\n      {showAddModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 dark:bg-opacity-70\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md dark:bg-gray-800\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-xl font-bold\">Create Automation</h3>\n              <button \n                onClick={() => setShowAddModal(false)}\n                className=\"text-gray-400 hover:text-gray-600 dark:text-gray-300 dark:hover:text-gray-100\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n            \n            <form onSubmit={handleCreateAutomation}>\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\">\n                  Name\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Automation name\"\n                  className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                  value={newAutomation.name}\n                  onChange={handleInputChange}\n                  required\n                />\n              </div>\n              \n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\">\n                  Description\n                </label>\n                <input\n                  type=\"text\"\n                  name=\"description\"\n                  placeholder=\"Automation description\"\n                  className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                  value={newAutomation.description}\n                  onChange={handleInputChange}\n                />\n              </div>\n              \n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\">\n                  Trigger Type\n                </label>\n                <select\n                  name=\"trigger_type\"\n                  className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                  value={newAutomation.trigger_type}\n                  onChange={handleInputChange}\n                >\n                  <option value=\"status_change\">Task Status Change</option>\n                  <option value=\"assignment\">Task Assignment</option>\n                  <option value=\"due_date_passed\">Due Date Passed</option>\n                </select>\n              </div>\n              \n              {renderTriggerValueField()}\n              \n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-1 dark:text-gray-300\">\n                  Action Type\n                </label>\n                <select\n                  name=\"action_type\"\n                  className=\"w-full px-3 py-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                  value={newAutomation.action_type}\n                  onChange={handleInputChange}\n                >\n                  <option value=\"assign_badge\">Assign Badge</option>\n                  <option value=\"change_status\">Change Status</option>\n                  <option value=\"notify\">Send Notification</option>\n                </select>\n              </div>\n              \n              {renderActionPayloadFields()}\n              \n              <div className=\"flex justify-end space-x-3 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAddModal(false)}\n                  className=\"px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-50 dark:border-gray-600 dark:hover:bg-gray-700 dark:text-white\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 dark:bg-primary-700 dark:hover:bg-primary-800\"\n                >\n                  Create\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectAutomations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}