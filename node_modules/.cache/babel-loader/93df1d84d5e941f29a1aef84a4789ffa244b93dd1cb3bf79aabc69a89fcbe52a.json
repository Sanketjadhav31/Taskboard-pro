{"ast":null,"code":"import React,{createContext,useState,useEffect,useRef}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";export const ProjectContext=/*#__PURE__*/createContext();export const ProjectProvider=_ref=>{let{children}=_ref;const[projects,setProjects]=useState([]);const[userTasks,setUserTasks]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[fetchTrigger,setFetchTrigger]=useState(0);const isFetchingRef=useRef(false);const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);// Check auth status\nuseEffect(()=>{const token=localStorage.getItem('token');if(token){// Fetch current user\nconst fetchUser=async()=>{try{const res=await axios.get('/auth/current-user',{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});if(res.data&&res.data.user){setUser(res.data.user);setIsAuthenticated(true);}else{setIsAuthenticated(false);}}catch(err){console.error('Error fetching user in ProjectContext:',err);setIsAuthenticated(false);}};fetchUser();}else{setUser(null);setIsAuthenticated(false);}},[]);// Fetch all projects\nuseEffect(()=>{if(user&&isAuthenticated&&!isFetchingRef.current){fetchProjects();}},[user,isAuthenticated,fetchTrigger]);// Separate effect for tasks to prevent one from blocking the other\nuseEffect(()=>{if(user&&isAuthenticated){fetchUserTasks();}},[user,isAuthenticated]);// Function to manually trigger a refresh\nconst refreshProjects=()=>{setFetchTrigger(prev=>prev+1);};const fetchProjects=async()=>{// Prevent multiple simultaneous fetches\nif(isFetchingRef.current){console.log('Fetch already in progress, skipping duplicate request');return;}isFetchingRef.current=true;setLoading(true);setError(null);try{const token=localStorage.getItem('token');if(!token){console.error('No token found when fetching projects');setError('Authorization required. Please log in again.');setLoading(false);isFetchingRef.current=false;return;}console.log('Fetching projects with token:',token.substring(0,10)+'...');const res=await axios.get('/api/projects',{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});console.log('Projects response:',res.data);// Handle potential response formats\nif(Array.isArray(res.data)){setProjects(res.data);}else if(res.data&&typeof res.data==='object'){if(res.data.project){setProjects([res.data.project]);}else if(res.data.projects){setProjects(res.data.projects);}else{// If we can't identify a specific format, try to use the whole response\nif(Object.keys(res.data).length>0){console.log('Using fallback for projects data');setProjects([res.data]);}else{console.warn('Empty projects data returned');setProjects([]);}}}else{console.error('Unexpected projects response format:',res.data);setProjects([]);}setError(null);}catch(err){console.error('Error fetching projects:',err);if(err.response){console.error('Response status:',err.response.status);console.error('Response data:',err.response.data);}setError('Failed to load projects');// Don't clear projects array on error to allow showing stale data\n}finally{setLoading(false);isFetchingRef.current=false;}};const fetchUserTasks=async()=>{try{const token=localStorage.getItem('token');if(!token){console.error('No token found when fetching tasks');return;}const res=await axios.get('/api/tasks/user',{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});console.log('Tasks response:',res.data);setUserTasks(Array.isArray(res.data)?res.data:[]);}catch(err){console.error('Error fetching tasks:',err);}};// Create project\nconst createProject=async projectData=>{try{const token=localStorage.getItem('token');const res=await axios.post('/api/projects',projectData,{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});// Add the new project to the state\nsetProjects(prevProjects=>[...prevProjects,res.data]);// Record activity for new project creation\ntry{await axios.post('/api/activity',{type:'project_created',description:\"created a new project: \".concat(res.data.name),projectId:res.data._id},{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});}catch(activityErr){console.error('Failed to record activity:',activityErr);}return{success:true,project:res.data};}catch(err){var _err$response,_err$response$data;return{success:false,message:((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Failed to create project'};}};// Get project details\nconst getProject=async id=>{try{const token=localStorage.getItem('token');const res=await axios.get(\"/api/projects/\".concat(id),{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});return{success:true,project:res.data};}catch(err){var _err$response2,_err$response2$data;return{success:false,message:((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||'Failed to get project details'};}};// Update project\nconst updateProject=async(id,projectData)=>{try{const token=localStorage.getItem('token');const res=await axios.put(\"/api/projects/\".concat(id),projectData,{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});setProjects(prevProjects=>prevProjects.map(project=>project._id===id?res.data:project));return{success:true,project:res.data};}catch(err){var _err$response3,_err$response3$data;return{success:false,message:((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||'Failed to update project'};}};// Delete project\nconst deleteProject=async id=>{try{const token=localStorage.getItem('token');await axios.delete(\"/api/projects/\".concat(id),{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});setProjects(prevProjects=>prevProjects.filter(project=>project._id!==id));return{success:true};}catch(err){var _err$response4,_err$response4$data;return{success:false,message:((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.message)||'Failed to delete project'};}};// Create task\nconst createTask=async(projectId,taskData)=>{try{const token=localStorage.getItem('token');const res=await axios.post(\"/api/projects/\".concat(projectId,\"/tasks\"),taskData,{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});fetchUserTasks();// Refresh user tasks\nreturn{success:true,task:res.data};}catch(err){var _err$response5,_err$response5$data;return{success:false,message:((_err$response5=err.response)===null||_err$response5===void 0?void 0:(_err$response5$data=_err$response5.data)===null||_err$response5$data===void 0?void 0:_err$response5$data.message)||'Failed to create task'};}};// Update task\nconst updateTask=async(projectId,taskId,taskData)=>{try{const token=localStorage.getItem('token');const res=await axios.put(\"/api/projects/\".concat(projectId,\"/tasks/\").concat(taskId),taskData,{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});// Check if task was completed and record activity\nif(taskData.status==='completed'){try{await axios.post('/api/activity',{type:'task_completed',description:\"completed task: \".concat(res.data.title),projectId:projectId,taskId:taskId},{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});}catch(activityErr){console.error('Failed to record task completion activity:',activityErr);}}fetchUserTasks();// Refresh user tasks\nreturn{success:true,task:res.data};}catch(err){var _err$response6,_err$response6$data;return{success:false,message:((_err$response6=err.response)===null||_err$response6===void 0?void 0:(_err$response6$data=_err$response6.data)===null||_err$response6$data===void 0?void 0:_err$response6$data.message)||'Failed to update task'};}};// Delete task\nconst deleteTask=async(projectId,taskId)=>{try{const token=localStorage.getItem('token');await axios.delete(\"/api/projects/\".concat(projectId,\"/tasks/\").concat(taskId),{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});fetchUserTasks();// Refresh user tasks\nreturn{success:true};}catch(err){var _err$response7,_err$response7$data;return{success:false,message:((_err$response7=err.response)===null||_err$response7===void 0?void 0:(_err$response7$data=_err$response7.data)===null||_err$response7$data===void 0?void 0:_err$response7$data.message)||'Failed to delete task'};}};// Add team member\nconst addTeamMember=async(projectId,email)=>{try{if(!email||!email.trim()){return{success:false,message:'Email is required'};}console.log('Adding team member:',email,'to project:',projectId);const token=localStorage.getItem('token');const res=await axios.post(\"/api/projects/\".concat(projectId,\"/members\"),{email:email.trim()},{headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json'},withCredentials:true});console.log('Team member added successfully:',res.data);refreshProjects();// Refresh project list to get updated members\nreturn{success:true,member:res.data};}catch(err){var _err$response8,_err$response8$data;console.error('Failed to add team member:',err);return{success:false,message:((_err$response8=err.response)===null||_err$response8===void 0?void 0:(_err$response8$data=_err$response8.data)===null||_err$response8$data===void 0?void 0:_err$response8$data.message)||'Failed to add team member'};}};// Remove team member\nconst removeTeamMember=async(projectId,userId)=>{try{const token=localStorage.getItem('token');await axios.delete(\"/api/projects/\".concat(projectId,\"/members/\").concat(userId),{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});refreshProjects();// Refresh project list to get updated members\nreturn{success:true};}catch(err){var _err$response9,_err$response9$data;return{success:false,message:((_err$response9=err.response)===null||_err$response9===void 0?void 0:(_err$response9$data=_err$response9.data)===null||_err$response9$data===void 0?void 0:_err$response9$data.message)||'Failed to remove team member'};}};// Search projects and tasks\nconst search=async query=>{try{const token=localStorage.getItem('token');const res=await axios.get(\"/api/search?q=\".concat(query),{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});return{success:true,results:res.data};}catch(err){var _err$response0,_err$response0$data;return{success:false,message:((_err$response0=err.response)===null||_err$response0===void 0?void 0:(_err$response0$data=_err$response0.data)===null||_err$response0$data===void 0?void 0:_err$response0$data.message)||'Search failed'};}};return/*#__PURE__*/_jsx(ProjectContext.Provider,{value:{projects,userTasks,loading,error,refreshProjects,getProject,createProject,updateProject,deleteProject,createTask,updateTask,deleteTask,addTeamMember,removeTeamMember,search},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useRef","axios","jsx","_jsx","ProjectContext","ProjectProvider","_ref","children","projects","setProjects","userTasks","setUserTasks","loading","setLoading","error","setError","fetchTrigger","setFetchTrigger","isFetchingRef","user","setUser","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","fetchUser","res","get","headers","concat","withCredentials","data","err","console","current","fetchProjects","fetchUserTasks","refreshProjects","prev","log","substring","Array","isArray","project","Object","keys","length","warn","response","status","createProject","projectData","post","prevProjects","type","description","name","projectId","_id","activityErr","success","_err$response","_err$response$data","message","getProject","id","_err$response2","_err$response2$data","updateProject","put","map","_err$response3","_err$response3$data","deleteProject","delete","filter","_err$response4","_err$response4$data","createTask","taskData","task","_err$response5","_err$response5$data","updateTask","taskId","title","_err$response6","_err$response6$data","deleteTask","_err$response7","_err$response7$data","addTeamMember","email","trim","member","_err$response8","_err$response8$data","removeTeamMember","userId","_err$response9","_err$response9$data","search","query","results","_err$response0","_err$response0$data","Provider","value"],"sources":["C:/Users/DELL/OneDrive/Desktop/collabeaseproject/collabeasesorce/collabease/client/src/context/ProjectContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nexport const ProjectContext = createContext();\n\nexport const ProjectProvider = ({ children }) => {\n  const [projects, setProjects] = useState([]);\n  const [userTasks, setUserTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [fetchTrigger, setFetchTrigger] = useState(0);\n  const isFetchingRef = useRef(false);\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  \n  // Check auth status\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Fetch current user\n      const fetchUser = async () => {\n        try {\n          const res = await axios.get('/auth/current-user', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            },\n            withCredentials: true\n          });\n          if (res.data && res.data.user) {\n            setUser(res.data.user);\n            setIsAuthenticated(true);\n          } else {\n            setIsAuthenticated(false);\n          }\n        } catch (err) {\n          console.error('Error fetching user in ProjectContext:', err);\n          setIsAuthenticated(false);\n        }\n      };\n      \n      fetchUser();\n    } else {\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  }, []);\n\n  // Fetch all projects\n  useEffect(() => {\n    if (user && isAuthenticated && !isFetchingRef.current) {\n      fetchProjects();\n    }\n  }, [user, isAuthenticated, fetchTrigger]);\n\n  // Separate effect for tasks to prevent one from blocking the other\n  useEffect(() => {\n    if (user && isAuthenticated) {\n      fetchUserTasks();\n    }\n  }, [user, isAuthenticated]);\n\n  // Function to manually trigger a refresh\n  const refreshProjects = () => {\n    setFetchTrigger(prev => prev + 1);\n  };\n\n  const fetchProjects = async () => {\n    // Prevent multiple simultaneous fetches\n    if (isFetchingRef.current) {\n      console.log('Fetch already in progress, skipping duplicate request');\n      return;\n    }\n    \n    isFetchingRef.current = true;\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No token found when fetching projects');\n        setError('Authorization required. Please log in again.');\n        setLoading(false);\n        isFetchingRef.current = false;\n        return;\n      }\n      \n      console.log('Fetching projects with token:', token.substring(0, 10) + '...');\n      const res = await axios.get('/api/projects', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      \n      console.log('Projects response:', res.data);\n      \n      // Handle potential response formats\n      if (Array.isArray(res.data)) {\n        setProjects(res.data);\n      } else if (res.data && typeof res.data === 'object') {\n        if (res.data.project) {\n          setProjects([res.data.project]);\n        } else if (res.data.projects) {\n          setProjects(res.data.projects);\n        } else {\n          // If we can't identify a specific format, try to use the whole response\n          if (Object.keys(res.data).length > 0) {\n            console.log('Using fallback for projects data');\n            setProjects([res.data]);\n          } else {\n            console.warn('Empty projects data returned');\n            setProjects([]);\n          }\n        }\n      } else {\n        console.error('Unexpected projects response format:', res.data);\n        setProjects([]);\n      }\n      \n      setError(null);\n    } catch (err) {\n      console.error('Error fetching projects:', err);\n      if (err.response) {\n        console.error('Response status:', err.response.status);\n        console.error('Response data:', err.response.data);\n      }\n      setError('Failed to load projects');\n      // Don't clear projects array on error to allow showing stale data\n    } finally {\n      setLoading(false);\n      isFetchingRef.current = false;\n    }\n  };\n\n  const fetchUserTasks = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No token found when fetching tasks');\n        return;\n      }\n      \n      const res = await axios.get('/api/tasks/user', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      \n      console.log('Tasks response:', res.data);\n      setUserTasks(Array.isArray(res.data) ? res.data : []);\n    } catch (err) {\n      console.error('Error fetching tasks:', err);\n    }\n  };\n\n  // Create project\n  const createProject = async (projectData) => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.post('/api/projects', projectData, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      \n      // Add the new project to the state\n      setProjects(prevProjects => [...prevProjects, res.data]);\n      \n      // Record activity for new project creation\n      try {\n        await axios.post('/api/activity', {\n          type: 'project_created',\n          description: `created a new project: ${res.data.name}`,\n          projectId: res.data._id\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n      } catch (activityErr) {\n        console.error('Failed to record activity:', activityErr);\n      }\n      \n      return { success: true, project: res.data };\n    } catch (err) {\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Failed to create project'\n      };\n    }\n  };\n\n  // Get project details\n  const getProject = async (id) => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.get(`/api/projects/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      return { success: true, project: res.data };\n    } catch (err) {\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Failed to get project details'\n      };\n    }\n  };\n\n  // Update project\n  const updateProject = async (id, projectData) => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.put(`/api/projects/${id}`, projectData, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      setProjects(prevProjects => \n        prevProjects.map(project => \n          project._id === id ? res.data : project\n        )\n      );\n      return { success: true, project: res.data };\n    } catch (err) {\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Failed to update project'\n      };\n    }\n  };\n\n  // Delete project\n  const deleteProject = async (id) => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.delete(`/api/projects/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      setProjects(prevProjects => \n        prevProjects.filter(project => project._id !== id)\n      );\n      return { success: true };\n    } catch (err) {\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Failed to delete project'\n      };\n    }\n  };\n\n  // Create task\n  const createTask = async (projectId, taskData) => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.post(`/api/projects/${projectId}/tasks`, taskData, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      fetchUserTasks(); // Refresh user tasks\n      return { success: true, task: res.data };\n    } catch (err) {\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Failed to create task'\n      };\n    }\n  };\n\n  // Update task\n  const updateTask = async (projectId, taskId, taskData) => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.put(`/api/projects/${projectId}/tasks/${taskId}`, taskData, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      \n      // Check if task was completed and record activity\n      if (taskData.status === 'completed') {\n        try {\n          await axios.post('/api/activity', {\n            type: 'task_completed',\n            description: `completed task: ${res.data.title}`,\n            projectId: projectId,\n            taskId: taskId\n          }, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            },\n            withCredentials: true\n          });\n        } catch (activityErr) {\n          console.error('Failed to record task completion activity:', activityErr);\n        }\n      }\n      \n      fetchUserTasks(); // Refresh user tasks\n      return { success: true, task: res.data };\n    } catch (err) {\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Failed to update task'\n      };\n    }\n  };\n\n  // Delete task\n  const deleteTask = async (projectId, taskId) => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.delete(`/api/projects/${projectId}/tasks/${taskId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      fetchUserTasks(); // Refresh user tasks\n      return { success: true };\n    } catch (err) {\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Failed to delete task'\n      };\n    }\n  };\n\n  // Add team member\n  const addTeamMember = async (projectId, email) => {\n    try {\n      if (!email || !email.trim()) {\n        return {\n          success: false,\n          message: 'Email is required'\n        };\n      }\n\n      console.log('Adding team member:', email, 'to project:', projectId);\n      \n      const token = localStorage.getItem('token');\n      const res = await axios.post(`/api/projects/${projectId}/members`, \n        { email: email.trim() }, \n        {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        }\n      );\n      \n      console.log('Team member added successfully:', res.data);\n      refreshProjects(); // Refresh project list to get updated members\n      return { success: true, member: res.data };\n    } catch (err) {\n      console.error('Failed to add team member:', err);\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Failed to add team member'\n      };\n    }\n  };\n\n  // Remove team member\n  const removeTeamMember = async (projectId, userId) => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.delete(`/api/projects/${projectId}/members/${userId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      refreshProjects(); // Refresh project list to get updated members\n      return { success: true };\n    } catch (err) {\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Failed to remove team member'\n      };\n    }\n  };\n\n  // Search projects and tasks\n  const search = async (query) => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await axios.get(`/api/search?q=${query}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      return { success: true, results: res.data };\n    } catch (err) {\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Search failed'\n      };\n    }\n  };\n\n  return (\n    <ProjectContext.Provider\n      value={{\n        projects,\n        userTasks,\n        loading,\n        error,\n        refreshProjects,\n        getProject,\n        createProject,\n        updateProject,\n        deleteProject,\n        createTask,\n        updateTask,\n        deleteTask,\n        addTeamMember,\n        removeTeamMember,\n        search\n      }}\n    >\n      {children}\n    </ProjectContext.Provider>\n  );\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzE,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,MAAO,MAAM,CAAAC,cAAc,cAAGP,aAAa,CAAC,CAAC,CAE7C,MAAO,MAAM,CAAAQ,eAAe,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1C,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,SAAS,CAAEC,YAAY,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACkB,YAAY,CAAEC,eAAe,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CACnD,KAAM,CAAAoB,aAAa,CAAGlB,MAAM,CAAC,KAAK,CAAC,CACnC,KAAM,CAACmB,IAAI,CAAEC,OAAO,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACuB,eAAe,CAAEC,kBAAkB,CAAC,CAAGxB,QAAQ,CAAC,KAAK,CAAC,CAE7D;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAwB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACT;AACA,KAAM,CAAAG,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAA1B,KAAK,CAAC2B,GAAG,CAAC,oBAAoB,CAAE,CAChDC,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CACF,GAAIJ,GAAG,CAACK,IAAI,EAAIL,GAAG,CAACK,IAAI,CAACb,IAAI,CAAE,CAC7BC,OAAO,CAACO,GAAG,CAACK,IAAI,CAACb,IAAI,CAAC,CACtBG,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CAAC,IAAM,CACLA,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAE,MAAOW,GAAG,CAAE,CACZC,OAAO,CAACpB,KAAK,CAAC,wCAAwC,CAAEmB,GAAG,CAAC,CAC5DX,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAEDI,SAAS,CAAC,CAAC,CACb,CAAC,IAAM,CACLN,OAAO,CAAC,IAAI,CAAC,CACbE,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACAvB,SAAS,CAAC,IAAM,CACd,GAAIoB,IAAI,EAAIE,eAAe,EAAI,CAACH,aAAa,CAACiB,OAAO,CAAE,CACrDC,aAAa,CAAC,CAAC,CACjB,CACF,CAAC,CAAE,CAACjB,IAAI,CAAEE,eAAe,CAAEL,YAAY,CAAC,CAAC,CAEzC;AACAjB,SAAS,CAAC,IAAM,CACd,GAAIoB,IAAI,EAAIE,eAAe,CAAE,CAC3BgB,cAAc,CAAC,CAAC,CAClB,CACF,CAAC,CAAE,CAAClB,IAAI,CAAEE,eAAe,CAAC,CAAC,CAE3B;AACA,KAAM,CAAAiB,eAAe,CAAGA,CAAA,GAAM,CAC5BrB,eAAe,CAACsB,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CACnC,CAAC,CAED,KAAM,CAAAH,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC;AACA,GAAIlB,aAAa,CAACiB,OAAO,CAAE,CACzBD,OAAO,CAACM,GAAG,CAAC,uDAAuD,CAAC,CACpE,OACF,CAEAtB,aAAa,CAACiB,OAAO,CAAG,IAAI,CAC5BtB,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,CACF,KAAM,CAAAQ,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACF,KAAK,CAAE,CACVW,OAAO,CAACpB,KAAK,CAAC,uCAAuC,CAAC,CACtDC,QAAQ,CAAC,8CAA8C,CAAC,CACxDF,UAAU,CAAC,KAAK,CAAC,CACjBK,aAAa,CAACiB,OAAO,CAAG,KAAK,CAC7B,OACF,CAEAD,OAAO,CAACM,GAAG,CAAC,+BAA+B,CAAEjB,KAAK,CAACkB,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,KAAK,CAAC,CAC5E,KAAM,CAAAd,GAAG,CAAG,KAAM,CAAA1B,KAAK,CAAC2B,GAAG,CAAC,eAAe,CAAE,CAC3CC,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CAEFG,OAAO,CAACM,GAAG,CAAC,oBAAoB,CAAEb,GAAG,CAACK,IAAI,CAAC,CAE3C;AACA,GAAIU,KAAK,CAACC,OAAO,CAAChB,GAAG,CAACK,IAAI,CAAC,CAAE,CAC3BvB,WAAW,CAACkB,GAAG,CAACK,IAAI,CAAC,CACvB,CAAC,IAAM,IAAIL,GAAG,CAACK,IAAI,EAAI,MAAO,CAAAL,GAAG,CAACK,IAAI,GAAK,QAAQ,CAAE,CACnD,GAAIL,GAAG,CAACK,IAAI,CAACY,OAAO,CAAE,CACpBnC,WAAW,CAAC,CAACkB,GAAG,CAACK,IAAI,CAACY,OAAO,CAAC,CAAC,CACjC,CAAC,IAAM,IAAIjB,GAAG,CAACK,IAAI,CAACxB,QAAQ,CAAE,CAC5BC,WAAW,CAACkB,GAAG,CAACK,IAAI,CAACxB,QAAQ,CAAC,CAChC,CAAC,IAAM,CACL;AACA,GAAIqC,MAAM,CAACC,IAAI,CAACnB,GAAG,CAACK,IAAI,CAAC,CAACe,MAAM,CAAG,CAAC,CAAE,CACpCb,OAAO,CAACM,GAAG,CAAC,kCAAkC,CAAC,CAC/C/B,WAAW,CAAC,CAACkB,GAAG,CAACK,IAAI,CAAC,CAAC,CACzB,CAAC,IAAM,CACLE,OAAO,CAACc,IAAI,CAAC,8BAA8B,CAAC,CAC5CvC,WAAW,CAAC,EAAE,CAAC,CACjB,CACF,CACF,CAAC,IAAM,CACLyB,OAAO,CAACpB,KAAK,CAAC,sCAAsC,CAAEa,GAAG,CAACK,IAAI,CAAC,CAC/DvB,WAAW,CAAC,EAAE,CAAC,CACjB,CAEAM,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAE,MAAOkB,GAAG,CAAE,CACZC,OAAO,CAACpB,KAAK,CAAC,0BAA0B,CAAEmB,GAAG,CAAC,CAC9C,GAAIA,GAAG,CAACgB,QAAQ,CAAE,CAChBf,OAAO,CAACpB,KAAK,CAAC,kBAAkB,CAAEmB,GAAG,CAACgB,QAAQ,CAACC,MAAM,CAAC,CACtDhB,OAAO,CAACpB,KAAK,CAAC,gBAAgB,CAAEmB,GAAG,CAACgB,QAAQ,CAACjB,IAAI,CAAC,CACpD,CACAjB,QAAQ,CAAC,yBAAyB,CAAC,CACnC;AACF,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACjBK,aAAa,CAACiB,OAAO,CAAG,KAAK,CAC/B,CACF,CAAC,CAED,KAAM,CAAAE,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAd,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACF,KAAK,CAAE,CACVW,OAAO,CAACpB,KAAK,CAAC,oCAAoC,CAAC,CACnD,OACF,CAEA,KAAM,CAAAa,GAAG,CAAG,KAAM,CAAA1B,KAAK,CAAC2B,GAAG,CAAC,iBAAiB,CAAE,CAC7CC,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CAEFG,OAAO,CAACM,GAAG,CAAC,iBAAiB,CAAEb,GAAG,CAACK,IAAI,CAAC,CACxCrB,YAAY,CAAC+B,KAAK,CAACC,OAAO,CAAChB,GAAG,CAACK,IAAI,CAAC,CAAGL,GAAG,CAACK,IAAI,CAAG,EAAE,CAAC,CACvD,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACpB,KAAK,CAAC,uBAAuB,CAAEmB,GAAG,CAAC,CAC7C,CACF,CAAC,CAED;AACA,KAAM,CAAAkB,aAAa,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC3C,GAAI,CACF,KAAM,CAAA7B,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAA1B,KAAK,CAACoD,IAAI,CAAC,eAAe,CAAED,WAAW,CAAE,CACzDvB,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CAEF;AACAtB,WAAW,CAAC6C,YAAY,EAAI,CAAC,GAAGA,YAAY,CAAE3B,GAAG,CAACK,IAAI,CAAC,CAAC,CAExD;AACA,GAAI,CACF,KAAM,CAAA/B,KAAK,CAACoD,IAAI,CAAC,eAAe,CAAE,CAChCE,IAAI,CAAE,iBAAiB,CACvBC,WAAW,2BAAA1B,MAAA,CAA4BH,GAAG,CAACK,IAAI,CAACyB,IAAI,CAAE,CACtDC,SAAS,CAAE/B,GAAG,CAACK,IAAI,CAAC2B,GACtB,CAAC,CAAE,CACD9B,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CACJ,CAAE,MAAO6B,WAAW,CAAE,CACpB1B,OAAO,CAACpB,KAAK,CAAC,4BAA4B,CAAE8C,WAAW,CAAC,CAC1D,CAEA,MAAO,CAAEC,OAAO,CAAE,IAAI,CAAEjB,OAAO,CAAEjB,GAAG,CAACK,IAAK,CAAC,CAC7C,CAAE,MAAOC,GAAG,CAAE,KAAA6B,aAAA,CAAAC,kBAAA,CACZ,MAAO,CACLF,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,EAAAF,aAAA,CAAA7B,GAAG,CAACgB,QAAQ,UAAAa,aAAA,kBAAAC,kBAAA,CAAZD,aAAA,CAAc9B,IAAI,UAAA+B,kBAAA,iBAAlBA,kBAAA,CAAoBC,OAAO,GAAI,0BAC1C,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAC,UAAU,CAAG,KAAO,CAAAC,EAAE,EAAK,CAC/B,GAAI,CACF,KAAM,CAAA3C,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAA1B,KAAK,CAAC2B,GAAG,kBAAAE,MAAA,CAAkBoC,EAAE,EAAI,CACjDrC,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CACF,MAAO,CAAE8B,OAAO,CAAE,IAAI,CAAEjB,OAAO,CAAEjB,GAAG,CAACK,IAAK,CAAC,CAC7C,CAAE,MAAOC,GAAG,CAAE,KAAAkC,cAAA,CAAAC,mBAAA,CACZ,MAAO,CACLP,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,EAAAG,cAAA,CAAAlC,GAAG,CAACgB,QAAQ,UAAAkB,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAcnC,IAAI,UAAAoC,mBAAA,iBAAlBA,mBAAA,CAAoBJ,OAAO,GAAI,+BAC1C,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAK,aAAa,CAAG,KAAAA,CAAOH,EAAE,CAAEd,WAAW,GAAK,CAC/C,GAAI,CACF,KAAM,CAAA7B,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAA1B,KAAK,CAACqE,GAAG,kBAAAxC,MAAA,CAAkBoC,EAAE,EAAId,WAAW,CAAE,CAC9DvB,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CACFtB,WAAW,CAAC6C,YAAY,EACtBA,YAAY,CAACiB,GAAG,CAAC3B,OAAO,EACtBA,OAAO,CAACe,GAAG,GAAKO,EAAE,CAAGvC,GAAG,CAACK,IAAI,CAAGY,OAClC,CACF,CAAC,CACD,MAAO,CAAEiB,OAAO,CAAE,IAAI,CAAEjB,OAAO,CAAEjB,GAAG,CAACK,IAAK,CAAC,CAC7C,CAAE,MAAOC,GAAG,CAAE,KAAAuC,cAAA,CAAAC,mBAAA,CACZ,MAAO,CACLZ,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,EAAAQ,cAAA,CAAAvC,GAAG,CAACgB,QAAQ,UAAAuB,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAcxC,IAAI,UAAAyC,mBAAA,iBAAlBA,mBAAA,CAAoBT,OAAO,GAAI,0BAC1C,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAU,aAAa,CAAG,KAAO,CAAAR,EAAE,EAAK,CAClC,GAAI,CACF,KAAM,CAAA3C,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAxB,KAAK,CAAC0E,MAAM,kBAAA7C,MAAA,CAAkBoC,EAAE,EAAI,CACxCrC,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CACFtB,WAAW,CAAC6C,YAAY,EACtBA,YAAY,CAACsB,MAAM,CAAChC,OAAO,EAAIA,OAAO,CAACe,GAAG,GAAKO,EAAE,CACnD,CAAC,CACD,MAAO,CAAEL,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAO5B,GAAG,CAAE,KAAA4C,cAAA,CAAAC,mBAAA,CACZ,MAAO,CACLjB,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,EAAAa,cAAA,CAAA5C,GAAG,CAACgB,QAAQ,UAAA4B,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAc7C,IAAI,UAAA8C,mBAAA,iBAAlBA,mBAAA,CAAoBd,OAAO,GAAI,0BAC1C,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAe,UAAU,CAAG,KAAAA,CAAOrB,SAAS,CAAEsB,QAAQ,GAAK,CAChD,GAAI,CACF,KAAM,CAAAzD,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAA1B,KAAK,CAACoD,IAAI,kBAAAvB,MAAA,CAAkB4B,SAAS,WAAUsB,QAAQ,CAAE,CACzEnD,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CACFM,cAAc,CAAC,CAAC,CAAE;AAClB,MAAO,CAAEwB,OAAO,CAAE,IAAI,CAAEoB,IAAI,CAAEtD,GAAG,CAACK,IAAK,CAAC,CAC1C,CAAE,MAAOC,GAAG,CAAE,KAAAiD,cAAA,CAAAC,mBAAA,CACZ,MAAO,CACLtB,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,EAAAkB,cAAA,CAAAjD,GAAG,CAACgB,QAAQ,UAAAiC,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAclD,IAAI,UAAAmD,mBAAA,iBAAlBA,mBAAA,CAAoBnB,OAAO,GAAI,uBAC1C,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAoB,UAAU,CAAG,KAAAA,CAAO1B,SAAS,CAAE2B,MAAM,CAAEL,QAAQ,GAAK,CACxD,GAAI,CACF,KAAM,CAAAzD,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAA1B,KAAK,CAACqE,GAAG,kBAAAxC,MAAA,CAAkB4B,SAAS,YAAA5B,MAAA,CAAUuD,MAAM,EAAIL,QAAQ,CAAE,CAClFnD,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CAEF;AACA,GAAIiD,QAAQ,CAAC9B,MAAM,GAAK,WAAW,CAAE,CACnC,GAAI,CACF,KAAM,CAAAjD,KAAK,CAACoD,IAAI,CAAC,eAAe,CAAE,CAChCE,IAAI,CAAE,gBAAgB,CACtBC,WAAW,oBAAA1B,MAAA,CAAqBH,GAAG,CAACK,IAAI,CAACsD,KAAK,CAAE,CAChD5B,SAAS,CAAEA,SAAS,CACpB2B,MAAM,CAAEA,MACV,CAAC,CAAE,CACDxD,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CACJ,CAAE,MAAO6B,WAAW,CAAE,CACpB1B,OAAO,CAACpB,KAAK,CAAC,4CAA4C,CAAE8C,WAAW,CAAC,CAC1E,CACF,CAEAvB,cAAc,CAAC,CAAC,CAAE;AAClB,MAAO,CAAEwB,OAAO,CAAE,IAAI,CAAEoB,IAAI,CAAEtD,GAAG,CAACK,IAAK,CAAC,CAC1C,CAAE,MAAOC,GAAG,CAAE,KAAAsD,cAAA,CAAAC,mBAAA,CACZ,MAAO,CACL3B,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,EAAAuB,cAAA,CAAAtD,GAAG,CAACgB,QAAQ,UAAAsC,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAcvD,IAAI,UAAAwD,mBAAA,iBAAlBA,mBAAA,CAAoBxB,OAAO,GAAI,uBAC1C,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAyB,UAAU,CAAG,KAAAA,CAAO/B,SAAS,CAAE2B,MAAM,GAAK,CAC9C,GAAI,CACF,KAAM,CAAA9D,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAxB,KAAK,CAAC0E,MAAM,kBAAA7C,MAAA,CAAkB4B,SAAS,YAAA5B,MAAA,CAAUuD,MAAM,EAAI,CAC/DxD,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CACFM,cAAc,CAAC,CAAC,CAAE;AAClB,MAAO,CAAEwB,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAO5B,GAAG,CAAE,KAAAyD,cAAA,CAAAC,mBAAA,CACZ,MAAO,CACL9B,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,EAAA0B,cAAA,CAAAzD,GAAG,CAACgB,QAAQ,UAAAyC,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAc1D,IAAI,UAAA2D,mBAAA,iBAAlBA,mBAAA,CAAoB3B,OAAO,GAAI,uBAC1C,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAA4B,aAAa,CAAG,KAAAA,CAAOlC,SAAS,CAAEmC,KAAK,GAAK,CAChD,GAAI,CACF,GAAI,CAACA,KAAK,EAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAE,CAC3B,MAAO,CACLjC,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,mBACX,CAAC,CACH,CAEA9B,OAAO,CAACM,GAAG,CAAC,qBAAqB,CAAEqD,KAAK,CAAE,aAAa,CAAEnC,SAAS,CAAC,CAEnE,KAAM,CAAAnC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAA1B,KAAK,CAACoD,IAAI,kBAAAvB,MAAA,CAAkB4B,SAAS,aACrD,CAAEmC,KAAK,CAAEA,KAAK,CAACC,IAAI,CAAC,CAAE,CAAC,CACvB,CACEjE,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAAE,CAClC,cAAc,CAAE,kBAClB,CAAC,CACDQ,eAAe,CAAE,IACnB,CACF,CAAC,CAEDG,OAAO,CAACM,GAAG,CAAC,iCAAiC,CAAEb,GAAG,CAACK,IAAI,CAAC,CACxDM,eAAe,CAAC,CAAC,CAAE;AACnB,MAAO,CAAEuB,OAAO,CAAE,IAAI,CAAEkC,MAAM,CAAEpE,GAAG,CAACK,IAAK,CAAC,CAC5C,CAAE,MAAOC,GAAG,CAAE,KAAA+D,cAAA,CAAAC,mBAAA,CACZ/D,OAAO,CAACpB,KAAK,CAAC,4BAA4B,CAAEmB,GAAG,CAAC,CAChD,MAAO,CACL4B,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,EAAAgC,cAAA,CAAA/D,GAAG,CAACgB,QAAQ,UAAA+C,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAchE,IAAI,UAAAiE,mBAAA,iBAAlBA,mBAAA,CAAoBjC,OAAO,GAAI,2BAC1C,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAkC,gBAAgB,CAAG,KAAAA,CAAOxC,SAAS,CAAEyC,MAAM,GAAK,CACpD,GAAI,CACF,KAAM,CAAA5E,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAxB,KAAK,CAAC0E,MAAM,kBAAA7C,MAAA,CAAkB4B,SAAS,cAAA5B,MAAA,CAAYqE,MAAM,EAAI,CACjEtE,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CACFO,eAAe,CAAC,CAAC,CAAE;AACnB,MAAO,CAAEuB,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAO5B,GAAG,CAAE,KAAAmE,cAAA,CAAAC,mBAAA,CACZ,MAAO,CACLxC,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,EAAAoC,cAAA,CAAAnE,GAAG,CAACgB,QAAQ,UAAAmD,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAcpE,IAAI,UAAAqE,mBAAA,iBAAlBA,mBAAA,CAAoBrC,OAAO,GAAI,8BAC1C,CAAC,CACH,CACF,CAAC,CAED;AACA,KAAM,CAAAsC,MAAM,CAAG,KAAO,CAAAC,KAAK,EAAK,CAC9B,GAAI,CACF,KAAM,CAAAhF,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAA1B,KAAK,CAAC2B,GAAG,kBAAAE,MAAA,CAAkByE,KAAK,EAAI,CACpD1E,OAAO,CAAE,CACP,eAAe,WAAAC,MAAA,CAAYP,KAAK,CAClC,CAAC,CACDQ,eAAe,CAAE,IACnB,CAAC,CAAC,CACF,MAAO,CAAE8B,OAAO,CAAE,IAAI,CAAE2C,OAAO,CAAE7E,GAAG,CAACK,IAAK,CAAC,CAC7C,CAAE,MAAOC,GAAG,CAAE,KAAAwE,cAAA,CAAAC,mBAAA,CACZ,MAAO,CACL7C,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,EAAAyC,cAAA,CAAAxE,GAAG,CAACgB,QAAQ,UAAAwD,cAAA,kBAAAC,mBAAA,CAAZD,cAAA,CAAczE,IAAI,UAAA0E,mBAAA,iBAAlBA,mBAAA,CAAoB1C,OAAO,GAAI,eAC1C,CAAC,CACH,CACF,CAAC,CAED,mBACE7D,IAAA,CAACC,cAAc,CAACuG,QAAQ,EACtBC,KAAK,CAAE,CACLpG,QAAQ,CACRE,SAAS,CACTE,OAAO,CACPE,KAAK,CACLwB,eAAe,CACf2B,UAAU,CACVd,aAAa,CACbkB,aAAa,CACbK,aAAa,CACbK,UAAU,CACVK,UAAU,CACVK,UAAU,CACVG,aAAa,CACbM,gBAAgB,CAChBI,MACF,CAAE,CAAA/F,QAAA,CAEDA,QAAQ,CACc,CAAC,CAE9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}