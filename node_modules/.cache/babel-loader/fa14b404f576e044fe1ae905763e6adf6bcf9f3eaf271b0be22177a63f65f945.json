{"ast":null,"code":"import _objectSpread from\"C:/Users/DELL/OneDrive/Desktop/collabeaseproject/collabeasesorce/collabease/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);const[tokenChecked,setTokenChecked]=useState(false);// Check for token or cookie-based authentication on page load\nuseEffect(()=>{const checkAuth=async()=>{setLoading(true);try{// First check for JWT token in localStorage\nconst token=localStorage.getItem('token');// Configure axios with token if it exists\nif(token){console.log('Found existing token:',token.substring(0,15)+'...');// Validate token format (simple check)\nif(!token.includes('.')||token.trim()===''){console.error('Invalid token format, clearing token');localStorage.removeItem('token');setUser(null);setIsAuthenticated(false);setLoading(false);return;}// Set token in axios headers\naxios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);// Try to get current user with the token\nconsole.log('Fetching user data with token...');const res=await axios.get('/auth/current-user',{headers:{'Authorization':\"Bearer \".concat(token)},withCredentials:true});console.log('User data response:',res.status,res.data?'has data':'no data');if(res.data&&res.data.user){console.log('Successfully authenticated user:',res.data.user.email);setUser(res.data.user);setIsAuthenticated(true);}else{console.log('No valid user found with token');localStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];setUser(null);setIsAuthenticated(false);}}else{console.log('No token found, user is not authenticated');setUser(null);setIsAuthenticated(false);}}catch(err){console.error('Auth error:',err);// Only clear token if error is authentication related\nif(err.response&&(err.response.status===401||err.response.status===403)){console.log('Authentication error, clearing token');localStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];}setUser(null);setIsAuthenticated(false);}finally{setLoading(false);setTokenChecked(true);}};checkAuth();// Set up a timer to refresh auth every 15 minutes to keep session alive\nconst authRefreshInterval=setInterval(()=>{console.log('Refreshing auth token...');checkAuth();},15*60*1000);// 15 minutes\n// Listen for storage events to handle login/logout in other tabs\nconst handleStorageChange=e=>{if(e.key==='token'){console.log('Token changed in localStorage, refreshing auth state');checkAuth();}};window.addEventListener('storage',handleStorageChange);// Clean up interval and event listener on component unmount\nreturn()=>{clearInterval(authRefreshInterval);window.removeEventListener('storage',handleStorageChange);};},[]);// Global axios configuration for authorization\nuseEffect(()=>{// Set up interceptor for all requests\nconst interceptor=axios.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers['Authorization']=\"Bearer \".concat(token);config.withCredentials=true;// Always send cookies\n}return config;},error=>Promise.reject(error));// Clean up interceptor on unmount\nreturn()=>axios.interceptors.request.eject(interceptor);},[]);// Register user\nconst register=async formData=>{try{console.log('Registering user:',formData.email);const res=await axios.post('/auth/register',formData);const token=res.data.token;if(!token){console.error('No token received from registration');return{success:false,message:'Registration failed - no authentication token received'};}localStorage.setItem('token',token);// Set authorization header\naxios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);setUser(res.data.user);setIsAuthenticated(true);console.log('User registered successfully:',res.data.user);return{success:true};}catch(err){var _err$response,_err$response$data;console.error('Registration error:',err);return{success:false,message:((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Registration failed'};}};// Login user\nconst login=async formData=>{try{console.log('Logging in user:',formData.email);const res=await axios.post('/auth/login',formData);const token=res.data.token;if(!token){console.error('No token received from login');return{success:false,message:'Login failed - no authentication token received'};}localStorage.setItem('token',token);// Set authorization header\naxios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);setUser(res.data.user);setIsAuthenticated(true);console.log('User logged in successfully:',res.data.user);return{success:true};}catch(err){var _err$response2,_err$response2$data;console.error('Login error:',err);return{success:false,message:((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||'Login failed'};}};// Update user profile\nconst updateProfile=async userData=>{try{const token=localStorage.getItem('token');if(!token){return{success:false,message:'Not authenticated'};}// Set authorization header explicitly for this request\nconst res=await axios.put('/api/user/profile',userData,{headers:{'Authorization':\"Bearer \".concat(token)}});setUser(prevState=>_objectSpread(_objectSpread({},prevState),res.data.user));return{success:true,user:res.data.user};}catch(err){var _err$response3,_err$response3$data;console.error('Profile update error:',err);return{success:false,message:((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||'Failed to update profile'};}};// Update user photo\nconst updatePhoto=async photoData=>{try{const formData=new FormData();formData.append('photo',photoData);const token=localStorage.getItem('token');if(!token){return{success:false,message:'Not authenticated'};}// Set authorization header explicitly for this request\nconst res=await axios.post('/api/user/photo',formData,{headers:{'Content-Type':'multipart/form-data','Authorization':\"Bearer \".concat(token)}});setUser(prevState=>_objectSpread(_objectSpread({},prevState),{},{photo:res.data.photoUrl}));return{success:true,photoUrl:res.data.photoUrl};}catch(err){var _err$response4,_err$response4$data;console.error('Photo upload error:',err);return{success:false,message:((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.message)||'Failed to update profile photo'};}};// Logout user\nconst logout=async()=>{try{await axios.get('/auth/logout',{withCredentials:true});}catch(err){console.error('Logout error:',err);}finally{localStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];setUser(null);setIsAuthenticated(false);}};// Refresh user data\nconst refreshUserData=async()=>{try{const token=localStorage.getItem('token');if(!token){console.log('No token found during refresh');setUser(null);setIsAuthenticated(false);return false;}// Ensure token is in Authorization header\naxios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);const res=await axios.get('/auth/current-user',{headers:{Authorization:\"Bearer \".concat(token)},withCredentials:true});if(res.data&&res.data.user){console.log('Successfully refreshed user data:',res.data.user.email);setUser(res.data.user);setIsAuthenticated(true);return true;}console.log('No valid user data returned from refresh');setUser(null);setIsAuthenticated(false);return false;}catch(err){console.error('Error refreshing user data:',err);// Only clear token if error is authentication related\nif(err.response&&(err.response.status===401||err.response.status===403)){console.log('Authentication error during refresh, clearing token');localStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];setUser(null);setIsAuthenticated(false);}return false;}};// Initiate Google OAuth login\nconst googleLogin=()=>{// Clear any existing token before redirecting to Google OAuth\ntry{console.log('Starting Google OAuth login flow');localStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];// Redirect to Google OAuth\nconst baseUrl=axios.defaults.baseURL||'http://localhost:5000';console.log('Redirecting to Google OAuth:',\"\".concat(baseUrl,\"/auth/google\"));window.location.href=\"\".concat(baseUrl,\"/auth/google\");}catch(e){console.error('Error initiating Google login:',e);}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,setUser,isAuthenticated,setIsAuthenticated,loading,tokenChecked,register,login,googleLogin,logout,updateProfile,updatePhoto,refreshUserData},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","tokenChecked","setTokenChecked","checkAuth","token","localStorage","getItem","console","log","substring","includes","trim","error","removeItem","defaults","headers","common","concat","res","get","withCredentials","status","data","email","err","response","authRefreshInterval","setInterval","handleStorageChange","e","key","window","addEventListener","clearInterval","removeEventListener","interceptor","interceptors","request","use","config","Promise","reject","eject","register","formData","post","success","message","setItem","_err$response","_err$response$data","login","_err$response2","_err$response2$data","updateProfile","userData","put","prevState","_objectSpread","_err$response3","_err$response3$data","updatePhoto","photoData","FormData","append","photo","photoUrl","_err$response4","_err$response4$data","logout","refreshUserData","Authorization","googleLogin","baseUrl","baseURL","location","href","Provider","value"],"sources":["C:/Users/DELL/OneDrive/Desktop/collabeaseproject/collabeasesorce/collabease/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [tokenChecked, setTokenChecked] = useState(false);\n\n  // Check for token or cookie-based authentication on page load\n  useEffect(() => {\n    const checkAuth = async () => {\n      setLoading(true);\n      \n      try {\n        // First check for JWT token in localStorage\n        const token = localStorage.getItem('token');\n        \n        // Configure axios with token if it exists\n        if (token) {\n          console.log('Found existing token:', token.substring(0, 15) + '...');\n          \n          // Validate token format (simple check)\n          if (!token.includes('.') || token.trim() === '') {\n            console.error('Invalid token format, clearing token');\n            localStorage.removeItem('token');\n            setUser(null);\n            setIsAuthenticated(false);\n            setLoading(false);\n            return;\n          }\n          \n          // Set token in axios headers\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          \n          // Try to get current user with the token\n          console.log('Fetching user data with token...');\n          const res = await axios.get('/auth/current-user', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            },\n            withCredentials: true\n          });\n          \n          console.log('User data response:', res.status, res.data ? 'has data' : 'no data');\n          \n          if (res.data && res.data.user) {\n            console.log('Successfully authenticated user:', res.data.user.email);\n            setUser(res.data.user);\n            setIsAuthenticated(true);\n          } else {\n            console.log('No valid user found with token');\n            localStorage.removeItem('token');\n            delete axios.defaults.headers.common['Authorization'];\n            setUser(null);\n            setIsAuthenticated(false);\n          }\n        } else {\n          console.log('No token found, user is not authenticated');\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      } catch (err) {\n        console.error('Auth error:', err);\n        // Only clear token if error is authentication related\n        if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n          console.log('Authentication error, clearing token');\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n        setTokenChecked(true);\n      }\n    };\n\n    checkAuth();\n    \n    // Set up a timer to refresh auth every 15 minutes to keep session alive\n    const authRefreshInterval = setInterval(() => {\n      console.log('Refreshing auth token...');\n      checkAuth();\n    }, 15 * 60 * 1000); // 15 minutes\n    \n    // Listen for storage events to handle login/logout in other tabs\n    const handleStorageChange = (e) => {\n      if (e.key === 'token') {\n        console.log('Token changed in localStorage, refreshing auth state');\n        checkAuth();\n      }\n    };\n    \n    window.addEventListener('storage', handleStorageChange);\n    \n    // Clean up interval and event listener on component unmount\n    return () => {\n      clearInterval(authRefreshInterval);\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n\n  // Global axios configuration for authorization\n  useEffect(() => {\n    // Set up interceptor for all requests\n    const interceptor = axios.interceptors.request.use(\n      config => {\n        const token = localStorage.getItem('token');\n        if (token) {\n          config.headers['Authorization'] = `Bearer ${token}`;\n          config.withCredentials = true; // Always send cookies\n        }\n        return config;\n      },\n      error => Promise.reject(error)\n    );\n\n    // Clean up interceptor on unmount\n    return () => axios.interceptors.request.eject(interceptor);\n  }, []);\n\n  // Register user\n  const register = async (formData) => {\n    try {\n      console.log('Registering user:', formData.email);\n      const res = await axios.post('/auth/register', formData);\n      const token = res.data.token;\n      \n      if (!token) {\n        console.error('No token received from registration');\n        return {\n          success: false,\n          message: 'Registration failed - no authentication token received'\n        };\n      }\n      \n      localStorage.setItem('token', token);\n      \n      // Set authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      setUser(res.data.user);\n      setIsAuthenticated(true);\n      console.log('User registered successfully:', res.data.user);\n      return { success: true };\n    } catch (err) {\n      console.error('Registration error:', err);\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Registration failed'\n      };\n    }\n  };\n\n  // Login user\n  const login = async (formData) => {\n    try {\n      console.log('Logging in user:', formData.email);\n      const res = await axios.post('/auth/login', formData);\n      const token = res.data.token;\n      \n      if (!token) {\n        console.error('No token received from login');\n        return {\n          success: false,\n          message: 'Login failed - no authentication token received'\n        };\n      }\n      \n      localStorage.setItem('token', token);\n      \n      // Set authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      setUser(res.data.user);\n      setIsAuthenticated(true);\n      console.log('User logged in successfully:', res.data.user);\n      return { success: true };\n    } catch (err) {\n      console.error('Login error:', err);\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Login failed'\n      };\n    }\n  };\n\n  // Update user profile\n  const updateProfile = async (userData) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        return {\n          success: false,\n          message: 'Not authenticated'\n        };\n      }\n\n      // Set authorization header explicitly for this request\n      const res = await axios.put('/api/user/profile', userData, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      setUser(prevState => ({ ...prevState, ...res.data.user }));\n      return { success: true, user: res.data.user };\n    } catch (err) {\n      console.error('Profile update error:', err);\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Failed to update profile'\n      };\n    }\n  };\n\n  // Update user photo\n  const updatePhoto = async (photoData) => {\n    try {\n      const formData = new FormData();\n      formData.append('photo', photoData);\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        return {\n          success: false,\n          message: 'Not authenticated'\n        };\n      }\n\n      // Set authorization header explicitly for this request\n      const res = await axios.post('/api/user/photo', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      setUser(prevState => ({ ...prevState, photo: res.data.photoUrl }));\n      return { success: true, photoUrl: res.data.photoUrl };\n    } catch (err) {\n      console.error('Photo upload error:', err);\n      return {\n        success: false,\n        message: err.response?.data?.message || 'Failed to update profile photo'\n      };\n    }\n  };\n\n  // Logout user\n  const logout = async () => {\n    try {\n      await axios.get('/auth/logout', { withCredentials: true });\n    } catch (err) {\n      console.error('Logout error:', err);\n    } finally {\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n\n  // Refresh user data\n  const refreshUserData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.log('No token found during refresh');\n        setUser(null);\n        setIsAuthenticated(false);\n        return false;\n      }\n      \n      // Ensure token is in Authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      const res = await axios.get('/auth/current-user', {\n        headers: { \n          Authorization: `Bearer ${token}` \n        },\n        withCredentials: true\n      });\n      \n      if (res.data && res.data.user) {\n        console.log('Successfully refreshed user data:', res.data.user.email);\n        setUser(res.data.user);\n        setIsAuthenticated(true);\n        return true;\n      }\n      \n      console.log('No valid user data returned from refresh');\n      setUser(null);\n      setIsAuthenticated(false);\n      return false;\n    } catch (err) {\n      console.error('Error refreshing user data:', err);\n      // Only clear token if error is authentication related\n      if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n        console.log('Authentication error during refresh, clearing token');\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n      return false;\n    }\n  };\n\n  // Initiate Google OAuth login\n  const googleLogin = () => {\n    // Clear any existing token before redirecting to Google OAuth\n    try {\n      console.log('Starting Google OAuth login flow');\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n      \n      // Redirect to Google OAuth\n      const baseUrl = axios.defaults.baseURL || 'http://localhost:5000';\n      console.log('Redirecting to Google OAuth:', `${baseUrl}/auth/google`);\n      window.location.href = `${baseUrl}/auth/google`;\n    } catch (e) {\n      console.error('Error initiating Google login:', e);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        setUser,\n        isAuthenticated,\n        setIsAuthenticated,\n        loading,\n        tokenChecked,\n        register,\n        login,\n        googleLogin,\n        logout,\n        updateProfile,\n        updatePhoto,\n        refreshUserData\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}